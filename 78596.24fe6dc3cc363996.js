(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[78596],{78596:(e,o,t)=>{t.r(o),t.d(o,{ExampleTuiCheckboxLabeledModule:()=>z});var n=t(86568),a=t(35856),u=t(82312),l=t(752),s=t(62548),i=t(33976),c=t(47796),r=t(6528),d=t(7548),p=t(11307),m=t(12772),b=t(55412),h=t(13692),f=t(96808),C=t(95356),k=t(56616),y=t(34496),E=t(37288),O=t(83480),x=t(34448);let I=(()=>{var e;class o{constructor(){this.testForm=new a.WC({testValue1:new a.Ku(!0),testValue2:new a.Ku(!1),testValue3:new a.Ku(!1)})}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.In1({type:e,selectors:[["tui-checkbox-labeled-example-1"]],decls:13,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1"],[1,"example"],["formControlName","testValue2",1,"tui-space_top-3"],["formControlName","testValue3",1,"tui-space_top-3"]],template:function(e,o){1&e&&(r.I0R(0,"form",0)(1,"tui-checkbox-labeled",1),r.OEk(2," Taiga UI "),r.I0R(3,"div",2),r.OEk(4,"Angular UI Kit for awesome people"),r.C$Y()(),r.I0R(5,"tui-checkbox-labeled",3),r.OEk(6," ng-polymorpheus "),r.I0R(7,"div",2),r.OEk(8,"A tiny library for polymorphic templates in Angular."),r.C$Y()(),r.I0R(9,"tui-checkbox-labeled",4),r.OEk(10," ng-dompurify "),r.I0R(11,"div",2),r.OEk(12,"Inclusive Angular API for DOMPurify"),r.C$Y()()()),2&e&&r.E7m("formGroup",o.testForm)},dependencies:[a.sz,a.ue,a.u,a.uW,a.Wo,m.a],styles:[".example[_ngcontent-%COMP%]{color:var(--tui-text-03)}"],changeDetection:0}),o})(),v=(()=>{var e;class o{constructor(){this.testForm=new a.WC({testValue1:new a.Ku(!0),testValue2:new a.Ku(!1),testValue3:new a.Ku(!1)})}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.In1({type:e,selectors:[["tui-checkbox-labeled-example-2"]],decls:7,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1","size","l"],["formControlName","testValue2","size","l",1,"tui-space_top-5"],["formControlName","testValue3","size","l",1,"tui-space_top-5"]],template:function(e,o){1&e&&(r.I0R(0,"form",0)(1,"tui-checkbox-labeled",1),r.OEk(2," An option "),r.C$Y(),r.I0R(3,"tui-checkbox-labeled",2),r.OEk(4," An alternative one "),r.C$Y(),r.I0R(5,"tui-checkbox-labeled",3),r.OEk(6," Other "),r.C$Y()()),2&e&&r.E7m("formGroup",o.testForm)},dependencies:[a.sz,a.ue,a.u,a.uW,a.Wo,m.a],encapsulation:2,changeDetection:0}),o})();function g(e,o){if(1&e&&(r.I0R(0,"div",2)(1,"code"),r.OEk(2,"CheckboxLabeled"),r.C$Y(),r.OEk(3," is a "),r.I0R(4,"code"),r.OEk(5,"Checkbox"),r.C$Y(),r.OEk(6," with a label. Click on label changes checkbox state. If you do not need a label, see "),r.I0R(7,"a",3)(8,"code"),r.OEk(9,"Checkbox"),r.C$Y()(),r.OEk(10," . "),r.C$Y(),r.I0R(11,"tui-doc-example",4),r.wR5(12,"tui-checkbox-labeled-example-1"),r.C$Y(),r.I0R(13,"tui-doc-example",5),r.wR5(14,"tui-checkbox-labeled-example-2"),r.C$Y()),2&e){const e=r.GaO();r.yG2(11),r.E7m("content",e.example1),r.yG2(2),r.E7m("content",e.example2)}}function R(e,o){if(1&e&&(r.I0R(0,"form",10)(1,"tui-checkbox-labeled",11),r.OEk(2," An option "),r.C$Y(),r.I0R(3,"tui-checkbox-labeled",12),r.OEk(4," An alternative one "),r.C$Y(),r.I0R(5,"tui-checkbox-labeled",13),r.OEk(6," Other "),r.C$Y()()),2&e){const e=r.GaO(2);r.E7m("formGroup",e.control),r.yG2(1),r.E7m("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size),r.yG2(2),r.E7m("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size),r.yG2(2),r.E7m("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size)}}function V(e,o){1&e&&(r.OEk(0," Disabled state (use "),r.I0R(1,"code"),r.OEk(2,"formControl.disable()"),r.C$Y(),r.OEk(3," ) "))}function Y(e,o){1&e&&r.OEk(0," Size ")}function w(e,o){if(1&e){const e=r.KQA();r.I0R(0,"tui-doc-demo",6),r.yuY(1,R,7,22,"ng-template"),r.C$Y(),r.I0R(2,"tui-doc-documentation"),r.yuY(3,V,4,0,"ng-template",7),r.qCj("documentationPropertyValueChange",(function(o){r.usT(e);const t=r.GaO();return r.CGJ(t.disabled=o)})),r.yuY(4,Y,1,0,"ng-template",8),r.qCj("documentationPropertyValueChange",(function(o){r.usT(e);const t=r.GaO();return r.CGJ(t.size=o)})),r.C$Y(),r.wR5(5,"inherited-documentation",9)}if(2&e){const e=r.GaO();r.E7m("control",e.control),r.yG2(3),r.E7m("documentationPropertyValue",e.disabled),r.yG2(1),r.E7m("documentationPropertyValues",e.sizeVariants)("documentationPropertyValue",e.size),r.yG2(1),r.E7m("withHint",!1)("withTextFieldController",!1)}}function G(e,o){if(1&e&&(r.I0R(0,"ol",14)(1,"li")(2,"p"),r.OEk(3," Import an Angular module for forms and "),r.I0R(4,"code"),r.OEk(5,"TuiCheckboxLabeledModule"),r.C$Y(),r.OEk(6," in the same module where you want to use our component: "),r.C$Y(),r.wR5(7,"tui-doc-code",15),r.C$Y(),r.I0R(8,"li")(9,"p"),r.OEk(10," Declare a form ( "),r.I0R(11,"code"),r.OEk(12,"FormGroup"),r.C$Y(),r.OEk(13," ) or a control ( "),r.I0R(14,"code"),r.OEk(15,"FormControl"),r.C$Y(),r.OEk(16," ) in your component: "),r.C$Y(),r.wR5(17,"tui-doc-code",16),r.C$Y(),r.I0R(18,"li")(19,"p"),r.OEk(20,"Add to the template:"),r.C$Y(),r.wR5(21,"tui-doc-code",17),r.C$Y()()),2&e){const e=r.GaO();r.yG2(7),r.E7m("code",e.exampleModule),r.yG2(10),r.E7m("code",e.exampleForm),r.yG2(4),r.E7m("code",e.exampleHtml)}}let $=(()=>{var e;class o extends d.m{constructor(){super(),this.exampleForm=t.e(48636).then(t.t.bind(t,48636,17)),this.exampleModule=t.e(37992).then(t.t.bind(t,37992,17)),this.exampleHtml=t.e(3920).then(t.t.bind(t,3920,17)),this.example1={TypeScript:t.e(74828).then(t.t.bind(t,74828,17)),HTML:t.e(12128).then(t.t.bind(t,12128,17)),LESS:t.e(13051).then(t.t.bind(t,13051,17))},this.example2={TypeScript:t.e(45127).then(t.t.bind(t,45127,17)),HTML:t.e(10728).then(t.t.bind(t,55488,17))},this.sizeVariants=["m","l"],this.size=this.sizeVariants[0],this.control=new a.WC({testValue1:new a.Ku(!1),testValue2:new a.Ku(null),testValue3:new a.Ku(!0)}),this.control.get("testValue1").valueChanges.subscribe((e=>{e&&this.control.get("testValue1").setValue(!1)}))}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.In1({type:e,selectors:[["example-tui-checkbox-labeled"]],features:[r.M5G([{provide:p.m,useExisting:(0,r.wd)((()=>e))}]),r.eg9],decls:4,vars:0,consts:[["header","CheckboxLabeled","package","KIT","type","components"],["pageTab",""],[1,"tui-space_bottom-3"],["routerLink","/components/checkbox","tuiLink",""],["id","base","heading","Basic",3,"content"],["id","large","heading","Big size",3,"content"],[3,"control"],["documentationPropertyName","disabled","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyMode","input","documentationPropertyName","size","documentationPropertyType","TuiSizeL",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[3,"withHint","withTextFieldController"],[3,"formGroup"],["formControlName","testValue1",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],["formControlName","testValue2",1,"tui-space_top-2",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],["formControlName","testValue3",1,"tui-space_top-2",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],[1,"b-demo-steps"],["filename","my.module.ts",3,"code"],["filename","my.component.ts",3,"code"],["filename","my.component.html",3,"code"]],template:function(e,o){1&e&&(r.I0R(0,"tui-doc-page",0),r.yuY(1,g,15,2,"ng-template",1),r.yuY(2,w,6,6,"ng-template",1),r.yuY(3,G,22,3,"ng-template",1),r.C$Y())},dependencies:[a.sz,a.ue,a.u,a.uW,a.Wo,u.ER,m.a,b.C,h.u,f.m,C.I,k.S,y.E,E.u,O.I,x.i,I,v],encapsulation:2,changeDetection:0}),o})(),z=(()=>{var e;class o{}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵmod=r.a4G({type:e}),e.ɵinj=r.s3X({imports:[n.MD,a.y,a.sl,u.qQ,i.TuiCheckboxLabeledModule,s.TuiLinkModule,l.kx,c.k,u.qQ.forChild((0,l._A)($))]}),o})()}}]);