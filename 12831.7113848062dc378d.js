(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[12831],{12831:n=>{n.exports="import {AsyncPipe} from '@angular/common';\nimport {Component, inject, INJECTOR, Injector} from '@angular/core';\nimport {toObservable} from '@angular/core/rxjs-interop';\nimport {FormControl} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiMobileCalendarDropdown} from '@taiga-ui/addon-mobile';\nimport {tuiControlValue, TuiDay} from '@taiga-ui/cdk';\nimport {TUI_MONTHS, TuiButton, TuiDialogService} from '@taiga-ui/core';\nimport {TUI_CALENDAR_DATE_STREAM} from '@taiga-ui/kit';\nimport {PolymorpheusComponent} from '@taiga-ui/polymorpheus';\nimport {combineLatest, map, type Observable} from 'rxjs';\n\n@Component({\n    imports: [AsyncPipe, TuiButton],\n    templateUrl: './index.html',\n    styleUrl: './index.less',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly dialogs = inject(TuiDialogService);\n    private readonly injector = inject(INJECTOR);\n    private readonly months$ = toObservable(inject(TUI_MONTHS));\n    private readonly control = new FormControl<TuiDay | null>(null);\n\n    private readonly dialog$: Observable<TuiDay> = this.dialogs.open(\n        new PolymorpheusComponent(\n            TuiMobileCalendarDropdown,\n            Injector.create({\n                providers: [\n                    {\n                        provide: TUI_CALENDAR_DATE_STREAM,\n                        useValue: tuiControlValue(this.control),\n                    },\n                ],\n                parent: this.injector,\n            }),\n        ),\n        {\n            appearance: 'fullscreen',\n            closable: false,\n            data: {\n                single: true,\n                min: TuiDay.currentLocal(),\n            },\n        },\n    );\n\n    protected readonly date$ = combineLatest([\n        tuiControlValue<TuiDay>(this.control),\n        this.months$,\n    ]).pipe(\n        map(([value, months]) =>\n            !value\n                ? 'Choose a date'\n                : `${months[value.month]} ${value.day}, ${value.year}`,\n        ),\n    );\n\n    protected get empty(): boolean {\n        return !this.control.value;\n    }\n\n    protected onClick(): void {\n        this.dialog$.subscribe((value) => this.control.setValue(value));\n    }\n}\n"}}]);