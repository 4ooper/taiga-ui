(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[96949],{96949:n=>{n.exports="import {ChangeDetectionStrategy, Component, inject, signal} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {type TuiPopover} from '@taiga-ui/cdk';\nimport {type TuiAlertOptions, TuiButton, TuiIcon} from '@taiga-ui/core';\nimport {TuiToast, TuiToastService} from '@taiga-ui/kit';\nimport {injectContext, PolymorpheusComponent} from '@taiga-ui/polymorpheus';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example3\",\n    imports: [TuiIcon, TuiToast],\n    template: `\n        <div tuiToast>\n            <tui-icon\n                icon=\"@tui.triangle-alert\"\n                [style.color]=\"'var(--tui-status-negative)'\"\n            />\n            Lost connection.\n            <br />\n            Restore your internet to continue\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Toast {\n    protected readonly context =\n        injectContext<TuiPopover<TuiAlertOptions<void>, boolean>>();\n}\n\n@Component({\n    standalone: true,\n    imports: [TuiButton, TuiToast],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    protected readonly toast = inject(TuiToastService);\n    protected readonly template = signal(false);\n\n    protected primitive(): void {\n        this.toast\n            .open('Alarm saved', {autoClose: 0, data: '@tui.alarm-clock'})\n            .subscribe();\n    }\n\n    protected component(): void {\n        this.toast.open(new PolymorpheusComponent(Toast), {closable: false}).subscribe();\n    }\n}\n"}}]);