(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[19721],{19721:n=>{n.exports="import {NgForOf} from '@angular/common';\nimport {Component, inject} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {tuiCountFilledControls} from '@taiga-ui/cdk';\nimport {TuiButton, TuiLink, TuiTextfield} from '@taiga-ui/core';\nimport {\n    TuiChevron,\n    TuiDataListWrapper,\n    TuiFilter,\n    TuiSegmented,\n    TuiSwitch,\n} from '@taiga-ui/kit';\nimport {TuiSearch} from '@taiga-ui/layout';\nimport {map} from 'rxjs';\n\n@Component({\n    imports: [\n        NgForOf,\n        ReactiveFormsModule,\n        TuiButton,\n        TuiChevron,\n        TuiDataListWrapper,\n        TuiFilter,\n        TuiLink,\n        TuiSearch,\n        TuiSegmented,\n        TuiSwitch,\n        TuiTextfield,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    protected readonly form = new FormGroup({\n        search: new FormControl(),\n        select: new FormControl(),\n        date: new FormControl(),\n        switch: new FormControl(),\n        filter: new FormControl(),\n        segmented: new FormControl(),\n    });\n\n    protected readonly items = inject<readonly string[]>('Pythons' as any);\n    protected readonly filters = ['Python', 'JavaScript', 'TypeScript'];\n    protected readonly segments = [null, 'Unread', 'Archived'];\n\n    protected readonly count = toSignal(\n        this.form.valueChanges.pipe(map(() => tuiCountFilledControls(this.form))),\n        {initialValue: 0},\n    );\n}\n"}}]);