name: ⚙️ E2E testing
on:
  pull_request:

env:
  RETRY_COUNT: 2
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  build-demo:
    if: ${{ !contains(github.head_ref, 'release/') }}
    name: Build demo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
        with:
          fetch-depth: 10
      - uses: taiga-family/ci/actions/setup/variables@v1.144.0
      - uses: taiga-family/ci/actions/run/rebase@v1.144.0
        continue-on-error: true
      - uses: taiga-family/ci/actions/setup/node@v1.144.0

      - run: npx nx type-check demo-playwright
      - name: Building demo-app of git-branch without cache
        run: npx nx build demo # Don't use prerender please, because it's flaky for e2e

      - name: Upload cache / ${{ env.CACHE_DIST_KEY }}
        uses: actions/cache/save@v4.2.4
        with:
          path: dist/demo
          key: ${{ env.CACHE_DIST_KEY }}

  cypress:
    if: ${{ !contains(github.head_ref , 'release/') }}
    runs-on: ubuntu-latest
    name: Cypress / Component Testing
    env:
      CYPRESS_BASELINE_REPO: 'baseline'
      CYPRESS_RESULTS_FOLDER: 'projects/demo-cypress/tests-results'
      CYPRESS_BASELINE_SNAPSHOTS: 'projects/demo-cypress/tests-results/snapshots/baseline'
      CYPRESS_BASELINE_SNAPSHOTS_KEY: 'cy_baseline_${{ github.event.pull_request.head.sha }}'
    steps:
      - uses: actions/checkout@v4.3.0
        with:
          ref: ${{ github.base_ref }}
      - uses: taiga-family/ci/actions/setup/variables@v1.144.0
      - uses: taiga-family/ci/actions/setup/node@v1.144.0

      - name: Run tests for baseline state
        run: npx nx component-test demo-cypress

      - name: Save Cypress Baseline Snapshots
        uses: actions/upload-artifact@v4.6.2
        with:
          path: ${{env.CYPRESS_BASELINE_SNAPSHOTS}}
          name: ${{env.CYPRESS_BASELINE_SNAPSHOTS_KEY}}
          if-no-files-found: ignore
          compression-level: 0
          retention-days: 1

      - uses: actions/checkout@v4.3.0
      - uses: taiga-family/ci/actions/setup/variables@v1.144.0
      - uses: taiga-family/ci/actions/setup/node@v1.144.0

      - name: Download Cypress Baseline Snapshots
        uses: actions/download-artifact@v4.3.0
        with:
          path: ${{env.CYPRESS_BASELINE_SNAPSHOTS}}
          pattern: ${{ env.CYPRESS_BASELINE_SNAPSHOTS_KEY }}
          merge-multiple: true

      - name: Run tests for current state
        run: npx nx component-test demo-cypress

      - name: Prepare diff screenshots
        run: |
          npm install canvas --no-save --silent --force
          npx ts-node -e "import { tuiCombineCypressFailedScreenshots as run } from './projects/testing/visual-testing'; run();";

      - name: Debug output
        continue-on-error: true
        run: tree ${{ env.CYPRESS_RESULTS_FOLDER }}  -L 1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          path: '${{ env.CYPRESS_RESULTS_FOLDER }}/**/*.diff.png'
          name: ${{ env.CYPRESS_SNAPSHOTS_ARTIFACTS_KEY }}
          if-no-files-found: ignore
          compression-level: 0
          retention-days: 1

  playwright:
    if: ${{ !contains(github.head_ref , 'release/') }}
    needs: [build-demo]
    strategy:
      fail-fast: false
      matrix:
        shard: [
            # Safari
            # {index: 1, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 2, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 3, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 4, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 5, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 6, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 7, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 8, os: 'macos-latest', project: 'webkit', total: 9},
            # {index: 9, os: 'macos-latest', project: 'webkit', total: 9},
            # Chrome
            {index: 1, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 2, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 3, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 4, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 5, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 6, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 7, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 8, os: 'ubuntu-latest', project: 'chromium', total: 9},
            {index: 9, os: 'ubuntu-latest', project: 'chromium', total: 9},
          ]
    name: Playwright / ${{ matrix.shard.os }} / ${{ matrix.shard.index }} of ${{ matrix.shard.total }}
    runs-on: ${{ matrix.shard.os }}
    steps:
      - uses: actions/checkout@v4.3.0
      - uses: taiga-family/ci/actions/setup/variables@v1.144.0

      - name: Mac OS X building all dependencies
        if: ${{ contains( matrix.shard.os, 'macos') }}
        run: brew install pkg-config cairo pango libpng jpeg-turbo giflib librsvg --force || echo ''

      - uses: taiga-family/ci/actions/setup/node@v1.144.0
      - uses: taiga-family/ci/actions/setup/playwright@v1.144.0

      - name: Download cache / ${{ env.CACHE_DIST_KEY }}
        uses: actions/cache/restore@v4.2.4
        with:
          path: dist/demo
          key: ${{ env.CACHE_DIST_KEY }}

      - uses: taiga-family/ci/actions/run/serve@v1.144.0
        with:
          port: ${{ env.NG_SERVER_PORT }}
          directory: ${{ env.DIST }}
          replaceBaseUrl: false

      - name: Run screenshot tests on ${{ env.DIST }} (exclude perf)
        run: |
          npx nx e2e demo-playwright -- \
            --update-snapshots \
            --project=${{ matrix.shard.project }} \
            --shard=${{ matrix.shard.index }}/${{ matrix.shard.total }} \
            --grep-invert @scrollbar

      - uses: taiga-family/ci/actions/run/clone@v1.144.0
        with:
          branch: snapshots/demo/next/${{ github.base_ref }}
          destination: ${{ env.DIST_NEXT }}

      - uses: taiga-family/ci/actions/run/serve@v1.144.0
        with:
          port: ${{ env.NG_SERVER_PORT }}
          directory: ${{ env.DIST_NEXT }}
          replaceBaseUrl: false

      - name: Run screenshot tests on ${{ env.DIST_NEXT }} (exclude perf)
        continue-on-error: true
        run: |
          npx nx e2e demo-playwright -- \
            --project=${{ matrix.shard.project }} \
            --shard=${{ matrix.shard.index }}/${{ matrix.shard.total }} \
            --grep-invert @scrollbar

      - name: Combine images to get diff reports
        run: |
          npm install canvas --no-save --silent --force
          npx ts-node -e "import { tuiCombinePlaywrightFailedScreenshots as run } from './projects/testing/visual-testing'; run();";

      - name: Upload artifacts / ${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}
        uses: actions/upload-artifact@v4.6.2
        with:
          path: ./projects/demo-playwright/tests-results/**/*-retry${{ env.RETRY_COUNT }}/**/*.diff.png
          name: ${{ env.PLAYWRIGHT_SNAPSHOTS_ARTIFACTS_KEY }}_${{ matrix.shard.index }}
          if-no-files-found: ignore
          compression-level: 0
          retention-days: 1

      - name: Upload reports / ${{ env.PLAYWRIGHT_BLOB_ARTIFACTS_KEY }}_${{ matrix.shard.index }}
        uses: actions/upload-artifact@v4.6.2
        with:
          path: ./projects/demo-playwright/blob-report
          name: ${{ env.PLAYWRIGHT_BLOB_ARTIFACTS_KEY }}_${{ matrix.shard.index }}
          compression-level: 0
          retention-days: 1

  playwright-perf:
    if: ${{ !contains(github.head_ref , 'release/') }}
    needs: [build-demo]
    name: Playwright / Scrollbar Performance (Chromium)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - uses: taiga-family/ci/actions/setup/variables@v1.140.0
      - uses: taiga-family/ci/actions/setup/node@v1.140.0
      - uses: taiga-family/ci/actions/setup/playwright@v1.140.0
      - name: Download cache / ${{ env.CACHE_DIST_KEY }}
        uses: actions/cache/restore@v4.2.4
        with:
          path: dist/demo
          key: ${{ env.CACHE_DIST_KEY }}
      - uses: taiga-family/ci/actions/run/serve@v1.140.0
        with:
          port: ${{ env.NG_SERVER_PORT }}
          directory: ${{ env.DIST }}
          replaceBaseUrl: false
      - name: Run scrollbar performance suite (Chromium, logs visible)
        env:
          ITERATIONS_PER_CONFIGURATION: 30
        run: |
          npx nx e2e demo-playwright -- \
            --project=chromium \
            --reporter=list \
            projects/demo-playwright/tests/core/scrollbar/scrollbar-performance.pw.spec.ts
      - name: Publish performance summary
        run: |
          RESULTS=projects/demo-playwright/tests-results/scrollbar-performance-results.json
          export RESULTS
          echo "### Scrollbar Performance Summary" >> $GITHUB_STEP_SUMMARY
          node -e '
            const fs = require("fs");
            const p = process.env.RESULTS;
            const r = JSON.parse(fs.readFileSync(p, "utf8"));
            const rows = Object.values(r.results).map(x => ({
              name: x.variant.name,
              layout: x.summary.layoutCount.toFixed(1),
              layoutMs: x.summary.layoutDuration.toFixed(2),
              recalc: x.summary.recalcStyleCount.toFixed(1),
              recalcMs: x.summary.recalcStyleDuration.toFixed(2),
            }));
            const header = "| Variant | Layout (ops) | Layout (ms) | Recalc (ops) | Recalc (ms) |";
            const sep = "|---|---:|---:|---:|---:|";
            const lines = rows.map(r => "| " + r.name + " | " + r.layout + " | " + r.layoutMs + " | " + r.recalc + " | " + r.recalcMs + " |").join("\n");
            console.log(header + "\n" + sep + "\n" + lines);
          ' | tee -a $GITHUB_STEP_SUMMARY

      - name: Write performance summary file
        run: |
          RESULTS=projects/demo-playwright/tests-results/scrollbar-performance-results.json
          export RESULTS
          node -e '
            const fs = require("fs");
            const p = process.env.RESULTS;
            const r = JSON.parse(fs.readFileSync(p, "utf8"));
            const min = (a) => Math.min(...a);
            const max = (a) => Math.max(...a);
            const rows = Object.values(r.results).map(x => {
              const layoutOps = x.runs.map(rr => rr.layoutCount);
              const recalcOps = x.runs.map(rr => rr.recalcStyleCount);
              const layoutOpsMedian = ((x.summary.median && x.summary.median.layoutCount) ?? x.summary.layoutCount);
              const recalcOpsMedian = ((x.summary.median && x.summary.median.recalcStyleCount) ?? x.summary.recalcStyleCount);
              return {
                name: x.variant.name,
                layoutOpsMean: Number(x.summary.layoutCount).toFixed(1),
                layoutOpsMedian: Number(layoutOpsMedian).toFixed(1),
                layoutOpsRange: `[${min(layoutOps).toFixed(0)}, ${max(layoutOps).toFixed(0)}]`,
                recalcOpsMean: Number(x.summary.recalcStyleCount).toFixed(1),
                recalcOpsMedian: Number(recalcOpsMedian).toFixed(1),
                recalcOpsRange: `[${min(recalcOps).toFixed(0)}, ${max(recalcOps).toFixed(0)}]`,
                layoutMsMean: Number(x.summary.layoutDuration).toFixed(2),
                recalcMsMean: Number(x.summary.recalcStyleDuration).toFixed(2),
              };
            });
            const header = "| Variant | Layout (ops) mean | Layout (ops) median | Layout ops [min,max] | Recalc (ops) mean | Recalc (ops) median | Recalc ops [min,max] | Layout (ms) mean | Recalc (ms) mean |";
            const sep = "|---|---:|---:|---:|---:|---:|---:|---:|---:|";
            const lines = rows.map(rw => `| ${rw.name} | ${rw.layoutOpsMean} | ${rw.layoutOpsMedian} | ${rw.layoutOpsRange} | ${rw.recalcOpsMean} | ${rw.recalcOpsMedian} | ${rw.recalcOpsRange} | ${rw.layoutMsMean} | ${rw.recalcMsMean} |`).join("\\n");
            const out = "projects/demo-playwright/tests-results/scrollbar-performance-summary.md";
            let md = header + "\\n" + sep + "\\n" + lines + "\\n\\n";
            const rec = r.recommendation;
            const baseline = r.results["raf-throttling100ms"];
            if (rec) {
              md += `> ⭐ Final recommendation: ${rec.family} → ${rec.name} (debounce=${rec.debounceMs ?? "-"}ms, throttling=${rec.throttleMs}ms)\\n`;
              if (baseline && r.results[rec.name]) {
                const win = r.results[rec.name];
                const wLayoutOps = ((win.summary.median && win.summary.median.layoutCount) ?? win.summary.layoutCount);
                const wRecalcOps = ((win.summary.median && win.summary.median.recalcStyleCount) ?? win.summary.recalcStyleCount);
                const bLayoutOps = ((baseline.summary.median && baseline.summary.median.layoutCount) ?? baseline.summary.layoutCount);
                const bRecalcOps = ((baseline.summary.median && baseline.summary.median.recalcStyleCount) ?? baseline.summary.recalcStyleCount);
                const dLayout = bLayoutOps - wLayoutOps;
                const dRecalc = bRecalcOps - wRecalcOps;
                const pct = (d, b) => b > 0 ? ((d / b) * 100).toFixed(1) + "%" : "0.0%";
                md += `> • Layout (ops): ${wLayoutOps.toFixed(1)} (Δ ${dLayout.toFixed(1)}, ${pct(dLayout, bLayoutOps)}) vs baseline ${bLayoutOps.toFixed(1)}\\n`;
                md += `> • Recalc (ops): ${wRecalcOps.toFixed(1)} (Δ ${dRecalc.toFixed(1)}, ${pct(dRecalc, bRecalcOps)}) vs baseline ${bRecalcOps.toFixed(1)}\\n`;
              }
            }
            fs.writeFileSync(out, md, "utf8");
            console.log("Saved:", out);
          '
      - name: Upload perf results artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            projects/demo-playwright/tests-results/scrollbar-performance-results.json
            projects/demo-playwright/tests-results/scrollbar-performance-summary.md
          name: scrollbar-performance-results
          retention-days: 7

  # workaround for status checks -- check this one job instead of each individual E2E job in the matrix
  # see https://github.com/orgs/community/discussions/9141#discussioncomment-2296809
  playwright-composite-result:
    name: Playwright E2E Tests matrix result
    if: ${{ always() }}
    needs: [playwright]
    runs-on: ubuntu-latest
    steps:
      - run: |
          result="${{ needs.playwright.result }}"
          # mark as successful even if skipped
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi

  result:
    if: ${{ !contains(github.head_ref , 'release/') }}
    name: E2E result
    needs: [playwright, cypress]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.3.0
      - uses: taiga-family/ci/actions/setup/variables@v1.144.0
      - uses: taiga-family/ci/actions/setup/node@v1.144.0

      - name: Download artifacts for Playwright
        continue-on-error: true
        uses: actions/download-artifact@v4.3.0
        with:
          path: ./total/playwright
          pattern: playwright-snapshots-artifacts--*
          merge-multiple: true
      - run: ls -R ./total/playwright || echo "not found"

      - name: Download artifacts for Cypress
        continue-on-error: true
        uses: actions/download-artifact@v4.3.0
        with:
          path: ./total/cypress
          pattern: cypress-snapshots-artifacts--*
          merge-multiple: true
      - run: ls -R ./total/cypress || echo "not found"

      - name: Download blob reports for Playwright
        continue-on-error: true
        uses: actions/download-artifact@v4.3.0
        with:
          path: all-blob-reports
          pattern: playwright-blob-artifacts--*
          merge-multiple: true
      - run: ls -R ./all-blob-reports || echo "not found"

      - name: Merge into HTML Report
        run: npx playwright merge-reports --config=projects/demo-playwright/merge.config.ts ./all-blob-reports

      - name: Deploy e2e report
        id: e2e-report
        uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        if: env.IS_OWNER_MODE == 'true'
        continue-on-error: true
        with:
          channelId: pr${{ github.event.number }}-${{ github.head_ref }}-e2e
          firebaseServiceAccount: ${{ secrets.FIREBASE_TAIGA_PREVIEWS_SA }}
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          projectId: taiga-previews
          expires: 1d
          target: taiga-previews-demo-e2e-report
          disableComment: 'true'

      - name: Create report comment
        id: report-summary
        continue-on-error: true
        uses: daun/playwright-report-summary@v3.10.0
        with:
          comment-title: 'Playwright test results'
          report-file: ./all-blob-reports/results.json
          report-url: ${{ steps.e2e-report.outputs.details_url }}

      - name: Check if diff-output exists
        id: diff_checker
        run: |
          echo "diff_exist=$(find ./total -iname '*.diff.png' | wc -l | sed -e 's/^[[:space:]]*//')" >> $GITHUB_OUTPUT

      - name: Fall with an error if diff-output exists
        if: ${{ steps.diff_checker.outputs.diff_exist != '0' }}
        run: |
          find ./total -iname '*.diff.png' -exec echo "{}" \;
          exit 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
