(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1958],{1958:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var n=a(87742),o=a(14027),s=a(75407),r=a(19146),u=a(68360);const c=(()=>{var e;class t{constructor(){this.testForm=new n.gE({testValue1:new n.MJ("A field",n.k0.required),testValue2:new n.MJ("This one can be expanded",n.k0.required),testValue3:new n.MJ("This one can be expanded (expandable on focus)",n.k0.required)})}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.VBU({type:e,selectors:[["ng-component"]],standalone:!0,exportAs:"Example1",features:[s.aNF],decls:10,vars:3,consts:[[3,"formGroup"],["formControlName","testValue1"],["formControlName","testValue2",1,"tui-space_top-4",3,"expandable"],["formControlName","testValue3",1,"tui-space_top-4",3,"expandable"],["textarea",""]],template:function(e,t){if(1&e&&(s.j41(0,"p"),s.EFF(1," It has a fixed size and content scroll by default. But there is also an expandable mode with height increase from content inside\n"),s.k0s(),s.j41(2,"form",0)(3,"tui-textarea",1),s.EFF(4,"Type a text"),s.k0s(),s.j41(5,"tui-textarea",2),s.EFF(6," Type a text "),s.k0s(),s.j41(7,"tui-textarea",3,4),s.EFF(9," Type a text (expandable on focus) "),s.k0s()()),2&e){const e=s.sdS(8);s.R7$(2),s.Y8G("formGroup",t.testForm),s.R7$(3),s.Y8G("expandable",!0),s.R7$(2),s.Y8G("expandable",e.focused)}},dependencies:[n.X1,n.qT,n.BC,n.cb,n.j4,n.JD,o.bCn,r.IU,u.I],encapsulation:2,changeDetection:0}),t})()}}]);