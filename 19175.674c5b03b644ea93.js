(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[19175],{19175:n=>{n.exports="import {AsyncPipe, NgForOf} from '@angular/common';\nimport {Component} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {\n    FormArray,\n    FormControl,\n    FormGroup,\n    FormsModule,\n    ReactiveFormsModule,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiTable, TuiTableFilters} from '@taiga-ui/addon-table';\nimport {TuiButton, TuiFormatNumberPipe, TuiTextfield} from '@taiga-ui/core';\nimport {TuiInputNumber, TuiSwitch} from '@taiga-ui/kit';\nimport {map} from 'rxjs';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example2\",\n    imports: [\n        AsyncPipe,\n        FormsModule,\n        NgForOf,\n        ReactiveFormsModule,\n        TuiButton,\n        TuiFormatNumberPipe,\n        TuiInputNumber,\n        TuiSwitch,\n        TuiTable,\n        TuiTableFilters,\n        TuiTextfield,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly testData = [\n        {name: 'James', balance: 10000},\n        {name: 'Michael', balance: 20000},\n        {name: 'Richard', balance: 30000},\n        {name: 'Robert', balance: 40000},\n        {name: 'Daniel', balance: 50000},\n    ] as const;\n\n    protected readonly filterForm = new FormGroup({\n        balance: new FormControl(0),\n    });\n\n    protected readonly array = new FormArray<FormGroup>([]);\n\n    protected readonly items = toSignal(\n        this.array.valueChanges.pipe(map(() => [...this.array.controls])),\n        {initialValue: []},\n    );\n\n    protected testIndex = 0;\n\n    protected readonly columns = ['name', 'balance'];\n\n    public addRow(): void {\n        const name = this.testData[this.testIndex]?.name ?? '';\n        const balance = this.testData?.[this.testIndex]?.balance ?? 0;\n\n        this.array.push(\n            new FormGroup({\n                name: new FormControl(name),\n                balance: new FormControl(balance, {updateOn: 'blur'}),\n            }),\n        );\n        this.testIndex++;\n    }\n\n    protected readonly filter = (\n        {balance}: Record<string, FormControl>,\n        value: number,\n    ): boolean => balance?.value >= value;\n\n    protected onToggle(enabled: boolean): void {\n        if (enabled) {\n            this.filterForm.enable();\n        } else {\n            this.filterForm.disable();\n        }\n    }\n}\n"}}]);