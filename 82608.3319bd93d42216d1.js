(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[82608],{82608:n=>{n.exports="import {Component} from '@angular/core';\nimport {\n    FormControl,\n    FormGroup,\n    ReactiveFormsModule,\n    type ValidationErrors,\n    type ValidatorFn,\n} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {\n    TuiButton,\n    TuiError,\n    TuiTextfield,\n    tuiValidationErrorsProvider,\n} from '@taiga-ui/core';\nimport {TuiInputDateTime, TuiUnfinishedValidator} from '@taiga-ui/kit';\nimport {TuiForm} from '@taiga-ui/layout';\n\nexport function minLengthValidator(minLength: number): ValidatorFn {\n    return ({value}): ValidationErrors | null =>\n        value?.filter(Boolean).length >= minLength ? null : {required: {value}};\n}\n\n@Component({\n    imports: [\n        ReactiveFormsModule,\n        TuiButton,\n        TuiError,\n        TuiForm,\n        TuiInputDateTime,\n        TuiTextfield,\n        TuiUnfinishedValidator,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n    providers: [\n        tuiValidationErrorsProvider({\n            tuiUnfinished: 'Either fill this or leave blank',\n            required: 'This field is required',\n        }),\n    ],\n})\nexport default class Example {\n    protected readonly form = new FormGroup({\n        timeRequired: new FormControl(null, minLengthValidator(2)),\n        dayRequired: new FormControl(\n            null,\n            minLengthValidator(1), // The same as `Validators.required` (from @angular/forms)\n        ),\n        optional: new FormControl(),\n    });\n}\n"}}]);