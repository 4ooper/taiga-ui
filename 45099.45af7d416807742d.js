(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[45099],{45099:(e,t,n)=>{n.r(t),n.d(t,{default:()=>g});var o=n(33898),c=n(11746),i=n(20755),a=n(36877),s=n(43894),d=n(17894),p=n(97967),u=n(61975),l=n(73633),r=n(2313);function m(e,t){1&e&&(i.TgZ(0,"p"),i._uU(1," A service that allows hiding and showing virtual keyboard programmatically on both Android and iOS devices "),i.qZA(),i.TgZ(2,"tui-notification"),i._uU(3," Does nothing on devices with no virtual keyboard or when input is not focused "),i.qZA(),i._UZ(4,"tui-doc-example",3),i.ALo(5,"tuiComponent"),i.ALo(6,"tuiExample")),2&e&&(i.xp6(4),i.Q6J("component",i.lcZ(5,2,1))("content",i.xi3(6,4,1,"html,ts")))}function h(e,t){if(1&e&&(i.TgZ(0,"ol",4)(1,"li"),i._uU(2," Inject service and call its methods: "),i._UZ(3,"tui-doc-code",5),i.qZA()()),2&e){const e=i.oxw();i.xp6(3),i.Q6J("code",e.inject)}}const g=(()=>{var e;class t{constructor(){this.inject=n.e(51468).then(n.t.bind(n,51468,17))}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=i.Xpm({type:e,selectors:[["ng-component"]],standalone:!0,features:[i.jDz],decls:3,vars:0,consts:[["header","Keyboard","package","ADDON-MOBILE","path","addon-mobile/services/keyboard.service.ts","type","services"],["pageTab",""],["pageTab","Setup"],["id","basic","heading","Basic",3,"component","content"],[1,"b-demo-steps"],["filename","my.component.ts",3,"code"]],template:function(e,t){1&e&&(i.TgZ(0,"tui-doc-page",0),i.YNc(1,m,7,7,"ng-template",1),i.YNc(2,h,4,1,"ng-template",2),i.qZA())},dependencies:[o.FE,a.c,s.q,d.n,p.f,u.R,l.I,c.TuiNotificationModule,r.L],encapsulation:2,changeDetection:0}),t})()}}]);