(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[21341],{21341:(e,n,t)=>{t.r(n),t.d(n,{IconsMappingModule:()=>T});var o=t(85408),i=t(46556),s=t(95829),a=t(65046),c=t(20682),r=t(57760),d=t(96112),u=t(87230),l=t(39508),p=t(20371),F=t(7641),h=t(45113),g=t(39373),m=t(73803),f=t(66399),k=t(34481),y=t(68856),E=t(8878),b=t(59721);const v={...u.tuiKitIcons,tuiIconCalendarLarge:"date_range-24px",tuiIconHelpCircle:"help-24px",tuiIconInfo:"info-16px",tuiIconClose:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"};let x=(()=>{var e;class n{constructor(){this.date=null}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.VBU({type:e,selectors:[["tui-icons-mapping-example-1"]],features:[l.Jv_([(0,r.tuiSvgOptionsProvider)({path:e=>`assets/icons/${v[e]}.svg#${v[e]}`})])],decls:2,vars:2,consts:[["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,n){1&e&&(l.j41(0,"tui-input-date-range",0),l.bIt("ngModelChange",(function(e){return n.date=e})),l.EFF(1," Pick date range\n"),l.k0s()),2&e&&l.Y8G("tuiTextfieldCleaner",!0)("ngModel",n.date)},dependencies:[s.BC,s.vS,y.D,E.N,b.n],encapsulation:2}),n})();var w=t(29591);let j=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.VBU({type:e,selectors:[["tui-icons-mapping-example-3"]],decls:20,vars:0,consts:[["routerLink","/icons/customization","tuiLink",""],["src","tuiIconPhone"],["src","assets/icons/polygon.svg"]],template:function(e,n){1&e&&(l.EFF(0,"There are two types of SVG gradients:\n"),l.j41(1,"code"),l.EFF(2,"linear"),l.k0s(),l.EFF(3,"\nand\n"),l.j41(4,"code"),l.EFF(5,"radial"),l.k0s(),l.EFF(6,"\n. They are defined separately from where they are used, which promotes reusability. But you should remember that such\nsvg files can't be reusable with tui-svg inside\n"),l.j41(7,"code"),l.EFF(8,"use"),l.k0s(),l.EFF(9,"\ntag. For workaround you need to provide (or\n"),l.j41(10,"a",0),l.EFF(11," override\n"),l.k0s(),l.EFF(12,"\n) src full path to svg file. "),l.nrm(13,"br")(14,"br"),l.EFF(15," non gradient icon:\n"),l.nrm(16,"tui-svg",1)(17,"br"),l.EFF(18,"\ngradient icon:\n"),l.nrm(19,"tui-svg",2))},dependencies:[F.E,w._,a.Wk],encapsulation:2}),n})();function C(e,n){if(1&e&&(l.j41(0,"tui-doc-copy",14)(1,"code"),l.EFF(2),l.k0s()()),2&e){const e=n.$implicit;l.Y8G("cdkCopyToClipboard",e),l.R7$(2),l.JRh(e)}}let I=(()=>{var e;class n{constructor(){this.options=t.e(54643).then(t.t.bind(t,54643,17)),this.example1={HTML:t.e(71271).then(t.t.bind(t,71271,17)),TypeScript:t.e(92023).then(t.t.bind(t,92023,17)),"./assets/icons/keyboard_arrow_right-24px.svg":t.e(51597).then(t.t.bind(t,51597,17))},this.example2={"process-icons.js":t.e(76517).then(t.t.bind(t,76517,17)),"process-icons.ts":t.e(62867).then(t.t.bind(t,62867,17))},this.example3={HTML:t.e(25473).then(t.t.bind(t,25473,17)),TypeScript:t.e(97805).then(t.t.bind(t,97805,17)),"./assets/icons/polygon.svg":t.e(37486).then(t.t.bind(t,37486,17))},this.names=Object.keys(u.tuiKitIcons),this.expanded=!1}toggle(){this.expanded=!this.expanded}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.VBU({type:e,selectors:[["icons-mapping"]],decls:70,vars:9,consts:[["header","Icons mapping"],["routerLink","/icons/overview","tuiLink",""],["size","xs","tuiButton","","type","button",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["id","material","heading","Material icons",3,"content"],["id","processing","heading","Reusable SVG",3,"content","fullsize"],["alt","info","src","assets/images/mapping.jpg","width","100%",1,"tui-space_bottom-4"],["id","gradient","heading","Gradients in SVG",3,"content","fullsize"],["id","bundled","heading","Bundled icons",3,"fullsize"],["routerLink","/icons/bundled","tuiLink",""],[1,"tui-space_top-8"],["filename","app.module.ts",3,"code"],[3,"cdkCopyToClipboard"]],template:function(e,n){1&e&&(l.j41(0,"tui-doc-page",0)(1,"p"),l.EFF(2," Taiga UI uses "),l.j41(3,"a",1)(4,"code"),l.EFF(5,"tui-svg"),l.k0s()(),l.EFF(6," component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components. "),l.k0s(),l.j41(7,"p")(8,"button",2),l.bIt("click",(function(){return n.toggle()})),l.EFF(9," Show predefined names "),l.k0s()(),l.j41(10,"tui-expand",3)(11,"div",4),l.DNE(12,C,3,2,"tui-doc-copy",5),l.k0s()(),l.j41(13,"p"),l.EFF(14," These predefined names are in "),l.j41(15,"code"),l.EFF(16,"tuiKitIcons"),l.k0s(),l.EFF(17," (included "),l.j41(18,"code"),l.EFF(19,"tuiCoreIcons"),l.k0s(),l.EFF(20," ) dictionary. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. So if you want to switch to a different icon set you would need to provide own mapping, for example Material icons: "),l.k0s(),l.j41(21,"tui-doc-example",6),l.nrm(22,"tui-icons-mapping-example-1"),l.k0s(),l.j41(23,"tui-doc-example",7),l.nrm(24,"img",8)(25,"br"),l.EFF(26," By default all icons from the "),l.j41(27,"a",1),l.EFF(28," icons pack "),l.k0s(),l.EFF(29," are already reusable. But if you use your icons, as you can see in the previous example with the "),l.j41(30,"code"),l.EFF(31,"keyboard_arrow_right-24px.svg"),l.k0s(),l.EFF(32," icon, then you need to prepare svg file especially. In order to prepare such svg files, you can use our preprocessing script from "),l.j41(33,"code"),l.EFF(34,"@taiga-ui/icons/scripts"),l.k0s(),l.EFF(35," . In "),l.j41(36,"code"),l.EFF(37,"tui-svg"),l.k0s(),l.EFF(38," we use tag "),l.j41(39,"code"),l.EFF(40,"use"),l.k0s(),l.EFF(41," . The "),l.j41(42,"code"),l.EFF(43,"use"),l.k0s(),l.EFF(44," element takes nodes from within the SVG document, and duplicates them somewhere else. The effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the use element is, much like cloned template elements. This approach allows can help browser fast rendering with effectively reuse of cached svg. "),l.k0s(),l.j41(45,"tui-doc-example",9),l.nrm(46,"tui-icons-mapping-example-3"),l.k0s(),l.j41(47,"tui-doc-example",10)(48,"p"),l.EFF(49," There are two ways to add icons: "),l.j41(50,"code"),l.EFF(51,"bundled"),l.k0s(),l.EFF(52," and as "),l.j41(53,"code"),l.EFF(54,"assets"),l.k0s(),l.EFF(55," (default). Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular "),l.j41(56,"code"),l.EFF(57,'img src="xxx"'),l.k0s(),l.EFF(58," with all the benefits of network caching. In both cases you can control color with CSS "),l.j41(59,"code"),l.EFF(60,"color"),l.k0s(),l.EFF(61," style. Hardcoded icons into a js bundle can be useful if your application does not have access to the network. "),l.k0s(),l.j41(62,"p")(63,"a",11),l.EFF(64," If you want to embed icons in a js bundle use "),l.j41(65,"code"),l.EFF(66,"SvgService"),l.k0s()()()(),l.j41(67,"h2",12),l.EFF(68,"DI options"),l.k0s(),l.nrm(69,"tui-doc-code",13),l.k0s()),2&e&&(l.R7$(10),l.Y8G("expanded",n.expanded),l.R7$(2),l.Y8G("ngForOf",n.names),l.R7$(9),l.Y8G("content",n.example1),l.R7$(2),l.Y8G("content",n.example2)("fullsize",!0),l.R7$(22),l.Y8G("content",n.example3)("fullsize",!0),l.R7$(2),l.Y8G("fullsize",!0),l.R7$(22),l.Y8G("code",n.options))},dependencies:[i.Sq,o.dF,p.d,F.E,h.s,g.S,m.t,f.P,k.o,a.Wk,x,j],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.sanitizer-example[_ngcontent-%COMP%]{display:block;padding-top:3.5rem}"],changeDetection:0}),n})(),T=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵmod=l.$C({type:e}),e.ɵinj=l.G2t({imports:[i.MD,s.YN,o.FQ,c.sr,r.TuiLinkModule,r.TuiExpandModule,r.TuiButtonModule,d.TuiInputDateRangeModule,r.TuiTextfieldControllerModule,c.lK,r.TuiSvgModule,a.iI.forChild((0,c.CC)(I))]}),n})()}}]);