(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[6484],{6484:n=>{n.exports="import {NgIf} from '@angular/common';\nimport {Component, computed, signal} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_DEFAULT_MATCHER, type TuiMatcher} from '@taiga-ui/cdk';\nimport {TuiTextfield, TuiTitle} from '@taiga-ui/core';\nimport {\n    TuiAvatar,\n    TuiDataListWrapper,\n    TuiFilterByInputPipe,\n    TuiInputPhone,\n} from '@taiga-ui/kit';\nimport {TuiCell} from '@taiga-ui/layout';\n\nclass User {\n    constructor(\n        public readonly firstName: string,\n        public readonly lastName: string,\n        public readonly phone: string,\n        public readonly avatarUrl: string | null = null,\n        public readonly disabled = false,\n    ) {}\n\n    public toString(): string {\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\nconst DATA: readonly User[] = [\n    new User(\n        'Alex',\n        'Inkin',\n        '+11234567890',\n        'https://avatars.githubusercontent.com/u/11832552',\n    ),\n    new User(\n        'Vladimir',\n        'Potekhin',\n        '+13213213213',\n        'https://avatars.githubusercontent.com/u/46284632',\n    ),\n    new User(\n        'Nikita',\n        'Barsukov',\n        '+18005553535',\n        'https://avatars.githubusercontent.com/u/35179038',\n    ),\n    new User(\n        'Roman',\n        'Sedov',\n        '+18003000600',\n        'https://avatars.githubusercontent.com/u/10106368',\n    ),\n    new User(\n        'Yulia',\n        'Tsareva',\n        '+13332221110',\n        'https://avatars.githubusercontent.com/u/8158578',\n    ),\n];\n\n@Component({\n    standalone: true,\n    exportAs: \"Example2\",\n    imports: [\n        FormsModule,\n        NgIf,\n        TuiAvatar,\n        TuiCell,\n        TuiDataListWrapper,\n        TuiFilterByInputPipe,\n        TuiInputPhone,\n        TuiTextfield,\n        TuiTitle,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    public readonly value = signal('');\n    public readonly items = DATA;\n    public readonly user = computed(() =>\n        this.items.find(({phone}) => phone === this.value()),\n    );\n\n    protected selectUser(user: User): void {\n        this.value.set(user.phone);\n    }\n\n    protected onInput(value: string): void {\n        const user = this.items.find((user) => this.matcher(user, value));\n\n        if (value === user?.toString() || value === user?.phone) {\n            this.value.set(user.phone);\n        }\n    }\n\n    protected readonly matcher: TuiMatcher<[User, string]> = (item, search) =>\n        (search.startsWith('+') &&\n            TUI_DEFAULT_MATCHER(item.phone, search.replaceAll(/\\D/g, ''))) ||\n        TUI_DEFAULT_MATCHER(item.toString(), search);\n\n    private isFullMatch(response: readonly User[], value: string): boolean {\n        return (\n            response.length === 1 &&\n            (String(response[0]) === value || response[0]?.phone === value)\n        );\n    }\n}\n"}}]);