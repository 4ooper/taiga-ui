(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[68048],{68048:e=>{e.exports="import {AsyncPipe, NgIf} from '@angular/common';\nimport {Component, inject, signal} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiLet} from '@taiga-ui/cdk';\nimport {TuiLoader, TuiTextfield} from '@taiga-ui/core';\nimport {TuiChevron, TuiComboBox, TuiDataListWrapper} from '@taiga-ui/kit';\nimport {debounceTime, filter, of, Subject, switchMap, tap} from 'rxjs';\n\nimport {DatabaseServer} from './database';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example5\",\n    imports: [\n        AsyncPipe,\n        FormsModule,\n        NgIf,\n        TuiChevron,\n        TuiComboBox,\n        TuiDataListWrapper,\n        TuiLet,\n        TuiLoader,\n        TuiTextfield,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly api = inject(DatabaseServer);\n\n    protected readonly showLoader = signal(false);\n    // Click on cleaner / datalist item triggers (input) events too\n    protected readonly search$ = new Subject<string>();\n    protected readonly items$ = this.search$.pipe(\n        debounceTime(0), // ensure form control is updated after last input\n        filter(() => !this.value), // click on datalist item should not trigger new api request\n        tap(() => this.showLoader.set(true)),\n        debounceTime(300),\n        switchMap((query) => (query.length >= 2 ? this.api.request$(query) : of(null))),\n        tap(() => this.showLoader.set(false)),\n    );\n\n    protected value: string | null = null;\n}\n"}}]);