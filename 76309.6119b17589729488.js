(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[76309],{76309:(e,n,t)=>{t.r(n),t.d(n,{IconsMappingModule:()=>A});var o=t(24580),i=t(88692),s=t(69900),a=t(91795),u=t(64500),c=t(75526),r=t(13841),d=t(69676),p=t(64537),l=t(98781),g=t(66596),h=t(88618),m=t(76189),f=t(83074),_=t(43560),Z=t(38868),y=t(92483),U=t(48706),T=t(64374);const x={...d.tuiKitIcons,tuiIconCalendarLarge:"date_range-24px",tuiIconHelpCircle:"help-24px",tuiIconInfo:"info-16px",tuiIconClose:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"};let b=(()=>{var e;class n{constructor(){this.date=null}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["tui-icons-mapping-example-1"]],features:[p._Bn([(0,c.tuiSvgOptionsProvider)({path:e=>`assets/icons/${x[e]}.svg#${x[e]}`})])],decls:2,vars:2,consts:[["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,n){1&e&&(p.TgZ(0,"tui-input-date-range",0),p.NdJ("ngModelChange",(function(e){return n.date=e})),p._uU(1," Pick date range\n"),p.qZA()),2&e&&p.Q6J("tuiTextfieldCleaner",!0)("ngModel",n.date)},dependencies:[s.JJ,s.On,y.H,U.d,T.b],encapsulation:2}),n})();var v=t(34880);let w=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["tui-icons-mapping-example-3"]],decls:20,vars:0,consts:[["routerLink","/icons/customization","tuiLink",""],["src","tuiIconPhone"],["src","assets/icons/polygon.svg"]],template:function(e,n){1&e&&(p._uU(0,"There are two types of SVG gradients:\n"),p.TgZ(1,"code"),p._uU(2,"linear"),p.qZA(),p._uU(3,"\nand\n"),p.TgZ(4,"code"),p._uU(5,"radial"),p.qZA(),p._uU(6,"\n. They are defined separately from where they are used, which promotes reusability. But you should remember that such\nsvg files can't be reusable with tui-svg inside\n"),p.TgZ(7,"code"),p._uU(8,"use"),p.qZA(),p._uU(9,"\ntag. For workaround you need to provide (or\n"),p.TgZ(10,"a",0),p._uU(11," override\n"),p.qZA(),p._uU(12,"\n) src full path to svg file. "),p._UZ(13,"br")(14,"br"),p._uU(15," non gradient icon:\n"),p._UZ(16,"tui-svg",1)(17,"br"),p._uU(18,"\ngradient icon:\n"),p._UZ(19,"tui-svg",2))},dependencies:[g.V,v.P,a.rH],encapsulation:2}),n})();function k(e,n){if(1&e&&(p.TgZ(0,"tui-doc-copy",14)(1,"code"),p._uU(2),p.qZA()()),2&e){const e=n.$implicit;p.Q6J("cdkCopyToClipboard",e),p.xp6(2),p.Oqu(e)}}let q=(()=>{var e;class n{constructor(){this.options=t.e(93362).then(t.t.bind(t,93362,17)),this.example1={HTML:t.e(85886).then(t.t.bind(t,85886,17)),TypeScript:t.e(78900).then(t.t.bind(t,78900,17)),"./assets/icons/keyboard_arrow_right-24px.svg":t.e(33339).then(t.t.bind(t,33339,17))},this.example2={"process-icons.js":t.e(42759).then(t.t.bind(t,42759,17)),"process-icons.ts":t.e(1141).then(t.t.bind(t,1141,17))},this.example3={HTML:t.e(74437).then(t.t.bind(t,74437,17)),TypeScript:t.e(3095).then(t.t.bind(t,3095,17)),"./assets/icons/polygon.svg":t.e(79571).then(t.t.bind(t,79571,17))},this.names=Object.keys(d.tuiKitIcons),this.expanded=!1}toggle(){this.expanded=!this.expanded}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=p.Xpm({type:e,selectors:[["icons-mapping"]],decls:70,vars:9,consts:[["header","Icons mapping"],["routerLink","/icons/overview","tuiLink",""],["size","xs","tuiButton","","type","button",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["id","material","heading","Material icons",3,"content"],["id","processing","heading","Reusable SVG",3,"content","fullsize"],["alt","info","src","assets/images/mapping.jpg","width","100%",1,"tui-space_bottom-4"],["id","gradient","heading","Gradients in SVG",3,"content","fullsize"],["id","bundled","heading","Bundled icons",3,"fullsize"],["routerLink","/icons/bundled","tuiLink",""],[1,"tui-space_top-8"],["filename","app.module.ts",3,"code"],[3,"cdkCopyToClipboard"]],template:function(e,n){1&e&&(p.TgZ(0,"tui-doc-page",0)(1,"p"),p._uU(2," Taiga UI uses "),p.TgZ(3,"a",1)(4,"code"),p._uU(5,"tui-svg"),p.qZA()(),p._uU(6," component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components. "),p.qZA(),p.TgZ(7,"p")(8,"button",2),p.NdJ("click",(function(){return n.toggle()})),p._uU(9," Show predefined names "),p.qZA()(),p.TgZ(10,"tui-expand",3)(11,"div",4),p.YNc(12,k,3,2,"tui-doc-copy",5),p.qZA()(),p.TgZ(13,"p"),p._uU(14," These predefined names are in "),p.TgZ(15,"code"),p._uU(16,"tuiKitIcons"),p.qZA(),p._uU(17," (included "),p.TgZ(18,"code"),p._uU(19,"tuiCoreIcons"),p.qZA(),p._uU(20," ) dictionary. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. So if you want to switch to a different icon set you would need to provide own mapping, for example Material icons: "),p.qZA(),p.TgZ(21,"tui-doc-example",6),p._UZ(22,"tui-icons-mapping-example-1"),p.qZA(),p.TgZ(23,"tui-doc-example",7),p._UZ(24,"img",8)(25,"br"),p._uU(26," By default all icons from the "),p.TgZ(27,"a",1),p._uU(28," icons pack "),p.qZA(),p._uU(29," are already reusable. But if you use your icons, as you can see in the previous example with the "),p.TgZ(30,"code"),p._uU(31,"keyboard_arrow_right-24px.svg"),p.qZA(),p._uU(32," icon, then you need to prepare svg file especially. In order to prepare such svg files, you can use our preprocessing script from "),p.TgZ(33,"code"),p._uU(34,"@taiga-ui/icons/scripts"),p.qZA(),p._uU(35," . In "),p.TgZ(36,"code"),p._uU(37,"tui-svg"),p.qZA(),p._uU(38," we use tag "),p.TgZ(39,"code"),p._uU(40,"use"),p.qZA(),p._uU(41," . The "),p.TgZ(42,"code"),p._uU(43,"use"),p.qZA(),p._uU(44," element takes nodes from within the SVG document, and duplicates them somewhere else. The effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the use element is, much like cloned template elements. This approach allows can help browser fast rendering with effectively reuse of cached svg. "),p.qZA(),p.TgZ(45,"tui-doc-example",9),p._UZ(46,"tui-icons-mapping-example-3"),p.qZA(),p.TgZ(47,"tui-doc-example",10)(48,"p"),p._uU(49," There are two ways to add icons: "),p.TgZ(50,"code"),p._uU(51,"bundled"),p.qZA(),p._uU(52," and as "),p.TgZ(53,"code"),p._uU(54,"assets"),p.qZA(),p._uU(55," (default). Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular "),p.TgZ(56,"code"),p._uU(57,'img src="xxx"'),p.qZA(),p._uU(58," with all the benefits of network caching. In both cases you can control color with CSS "),p.TgZ(59,"code"),p._uU(60,"color"),p.qZA(),p._uU(61," style. Hardcoded icons into a js bundle can be useful if your application does not have access to the network. "),p.qZA(),p.TgZ(62,"p")(63,"a",11),p._uU(64," If you want to embed icons in a js bundle use "),p.TgZ(65,"code"),p._uU(66,"SvgService"),p.qZA()()()(),p.TgZ(67,"h2",12),p._uU(68,"DI options"),p.qZA(),p._UZ(69,"tui-doc-code",13),p.qZA()),2&e&&(p.xp6(10),p.Q6J("expanded",n.expanded),p.xp6(2),p.Q6J("ngForOf",n.names),p.xp6(9),p.Q6J("content",n.example1),p.xp6(2),p.Q6J("content",n.example2)("fullsize",!0),p.xp6(22),p.Q6J("content",n.example3)("fullsize",!0),p.xp6(2),p.Q6J("fullsize",!0),p.xp6(22),p.Q6J("code",n.options))},dependencies:[i.sg,o.i3,l.f,g.V,h.S,m.v,f.c,_.q,Z.f,a.rH,b,w],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.sanitizer-example[_ngcontent-%COMP%]{display:block;padding-top:3.5rem}"],changeDetection:0}),n})(),A=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵmod=p.oAB({type:e}),e.ɵinj=p.cJS({imports:[i.ez,s.u5,o.Iq,u.k7,c.TuiLinkModule,c.TuiExpandModule,c.TuiButtonModule,r.TuiInputDateRangeModule,c.TuiTextfieldControllerModule,u.fV,c.TuiSvgModule,a.Bz.forChild((0,u.Ve)(q))]}),n})()}}]);