(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[29155],{29155:(e,s,o)=>{o.r(s),o.d(s,{default:()=>r});var t=o(20682),n=o(39508),i=o(66399),a=o(73803);let r=(()=>{var e;class s{constructor(){this.jestConfigJs=o.e(31882).then(o.t.bind(o,31882,17)),this.packageJson=o.e(57002).then(o.t.bind(o,57002,17)),this.setupJestJs=o.e(62807).then(o.t.bind(o,62807,17))}}return(e=s).ɵfac=function(s){return new(s||e)},e.ɵcmp=n.VBU({type:e,selectors:[["jest"]],standalone:!0,features:[n.aNF],decls:67,vars:3,consts:[["header","Jest"],[1,"tui-list"],[1,"tui-list__item"],["filename","jest.config.js",3,"code"],["filename","package.json",3,"code"],["filename","setup-jest.js",3,"code"]],template:function(e,s){1&e&&(n.j41(0,"tui-doc-page",0)(1,"p"),n.EFF(2," If you use Jest to run your tests, you need additional configuration because Jest is running on a Node.js emulator. "),n.k0s(),n.j41(3,"p"),n.EFF(4," Taiga UI uses "),n.j41(5,"code"),n.EFF(6,"@ng-web-apis/common"),n.k0s(),n.EFF(7," to avoid accessing global variables like "),n.j41(8,"code"),n.EFF(9,"window"),n.k0s(),n.EFF(10," or "),n.j41(11,"code"),n.EFF(12,"navigator"),n.k0s(),n.EFF(13," directly. Which requires Server Side Rendering (SSR) with the help of its sister library "),n.j41(14,"code"),n.EFF(15,"@ng-web-apis/universal"),n.k0s(),n.EFF(16," for Jest to run properly. "),n.k0s(),n.j41(17,"p"),n.EFF(18," Otherwise, you're gonna face errors like "),n.j41(19,"code"),n.EFF(20,"ReferenceError: IntersectionObserver is not defined"),n.k0s()(),n.j41(21,"h2"),n.EFF(22," Using "),n.j41(23,"code"),n.EFF(24,"@angular-builders/jest"),n.k0s(),n.EFF(25," or "),n.j41(26,"code"),n.EFF(27,"jest-preset-angular"),n.k0s()(),n.j41(28,"p"),n.EFF(29,"If you're using one of these libraries. You can follow the following steps :"),n.k0s(),n.j41(30,"ol",1)(31,"li",2),n.EFF(32," Install "),n.j41(33,"code"),n.EFF(34,"npm i @ng-web-apis/universal --save-dev"),n.k0s(),n.EFF(35," (install it as a devDependency only if you will use it for Jest, otherwise install it as a regular dependency). Install 2.0 and above for Taiga UI 3.0 and above, otherwise install 1.x.x. "),n.k0s(),n.j41(36,"li",2),n.EFF(37," Add a "),n.j41(38,"code"),n.EFF(39,"setupFilesAfterEnv"),n.k0s(),n.EFF(40," property to your "),n.j41(41,"code"),n.EFF(42,"jest.config.js"),n.k0s(),n.EFF(43," or "),n.j41(44,"code"),n.EFF(45,"package.json"),n.k0s(),n.EFF(46," jest configuration (depending on where your configuration is) with the path to "),n.j41(47,"code"),n.EFF(48,"setup-jest.js"),n.k0s(),n.EFF(49," if you have not already. "),n.nrm(50,"tui-doc-code",3),n.EFF(51," or "),n.nrm(52,"tui-doc-code",4),n.k0s(),n.j41(53,"li",2),n.EFF(54," Create the file "),n.j41(55,"code"),n.EFF(56,"setup-jest.js"),n.k0s(),n.EFF(57," (wherever you want as long as it's at the path referenced above) if you have not already. For example here at the root of the project. "),n.k0s(),n.j41(58,"li",2),n.EFF(59," Add the following line to the "),n.j41(60,"code"),n.EFF(61,"setup-jest.js"),n.k0s(),n.EFF(62," : "),n.j41(63,"code"),n.EFF(64,"import '@ng-web-apis/universal/mocks';"),n.k0s(),n.EFF(65," . "),n.nrm(66,"tui-doc-code",5),n.k0s()()()),2&e&&(n.R7$(50),n.Y8G("code",s.jestConfigJs),n.R7$(2),n.Y8G("code",s.packageJson),n.R7$(14),n.Y8G("code",s.setupJestJs))},dependencies:[t.AC,i.P,t.RW,a.t],encapsulation:2,changeDetection:0}),s})()}}]);