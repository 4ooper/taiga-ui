(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[183],{183:e=>{e.exports="import {AsyncPipe, NgIf} from '@angular/common';\nimport type {TemplateRef} from '@angular/core';\nimport {Component, inject} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiAmountPipe} from '@taiga-ui/addon-commerce';\nimport {TuiElasticSticky} from '@taiga-ui/addon-mobile';\nimport {tuiClamp} from '@taiga-ui/cdk';\nimport {\n    TuiButton,\n    TuiDialogService,\n    TuiDropdownService,\n    TuiNumberFormat,\n} from '@taiga-ui/core';\nimport {TuiAvatar} from '@taiga-ui/kit';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example4\",\n    imports: [\n        AsyncPipe,\n        NgIf,\n        TuiAmountPipe,\n        TuiAvatar,\n        TuiButton,\n        TuiElasticSticky,\n        TuiNumberFormat,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly dialogs = inject(TuiDialogService);\n    private readonly dropdowns = inject(TuiDropdownService);\n\n    protected filters = false;\n\n    protected onElastic(value: number, {style}: HTMLElement): void {\n        const scale = tuiClamp(value, 0.7, 1);\n\n        style.setProperty('transform', `scale(${scale})`);\n        style.setProperty('width', `calc((100% + 3.5rem) / ${scale})`);\n    }\n\n    protected onFilterClick(): void {\n        this.filters = true;\n        this.dialogs.open('Dialog with filters').subscribe({\n            complete: () => {\n                this.filters = false;\n            },\n        });\n    }\n\n    protected showDialog(\n        content: PolymorpheusContent,\n        button: TemplateRef<Record<string, unknown>>,\n    ): void {\n        const templateRef = this.dropdowns.addTemplate(button);\n\n        this.dialogs.open(content).subscribe({\n            complete: () => {\n                this.dropdowns.removeTemplate(templateRef);\n            },\n        });\n    }\n}\n"}}]);