(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2272],{2272:(e,o,t)=>{t.r(o),t.d(o,{default:()=>r});var s=t(752),n=t(6528),i=t(34496),a=t(13692);let r=(()=>{var e;class o{constructor(){this.jestConfigJs=t.e(51848).then(t.t.bind(t,51848,17)),this.packageJson=t.e(25184).then(t.t.bind(t,25184,17)),this.setupJestJs=t.e(18244).then(t.t.bind(t,18244,17))}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=n.In1({type:e,selectors:[["jest"]],standalone:!0,features:[n.UHJ],decls:67,vars:3,consts:[["header","Jest"],[1,"tui-list"],[1,"tui-list__item"],["filename","jest.config.js",3,"code"],["filename","package.json",3,"code"],["filename","setup-jest.js",3,"code"]],template:function(e,o){1&e&&(n.I0R(0,"tui-doc-page",0)(1,"p"),n.OEk(2," If you use Jest to run your tests, you need additional configuration because Jest is running on a Node.js emulator. "),n.C$Y(),n.I0R(3,"p"),n.OEk(4," Taiga UI uses "),n.I0R(5,"code"),n.OEk(6,"@ng-web-apis/common"),n.C$Y(),n.OEk(7," to avoid accessing global variables like "),n.I0R(8,"code"),n.OEk(9,"window"),n.C$Y(),n.OEk(10," or "),n.I0R(11,"code"),n.OEk(12,"navigator"),n.C$Y(),n.OEk(13," directly. Which requires Server Side Rendering (SSR) with the help of its sister library "),n.I0R(14,"code"),n.OEk(15,"@ng-web-apis/universal"),n.C$Y(),n.OEk(16," for Jest to run properly. "),n.C$Y(),n.I0R(17,"p"),n.OEk(18," Otherwise, you're gonna face errors like "),n.I0R(19,"code"),n.OEk(20,"ReferenceError: IntersectionObserver is not defined"),n.C$Y()(),n.I0R(21,"h2"),n.OEk(22," Using "),n.I0R(23,"code"),n.OEk(24,"@angular-builders/jest"),n.C$Y(),n.OEk(25," or "),n.I0R(26,"code"),n.OEk(27,"jest-preset-angular"),n.C$Y()(),n.I0R(28,"p"),n.OEk(29,"If you're using one of these libraries. You can follow the following steps :"),n.C$Y(),n.I0R(30,"ol",1)(31,"li",2),n.OEk(32," Install "),n.I0R(33,"code"),n.OEk(34,"npm i @ng-web-apis/universal --save-dev"),n.C$Y(),n.OEk(35," (install it as a devDependency only if you will use it for Jest, otherwise install it as a regular dependency). Install 2.0 and above for Taiga UI 3.0 and above, otherwise install 1.x.x. "),n.C$Y(),n.I0R(36,"li",2),n.OEk(37," Add a "),n.I0R(38,"code"),n.OEk(39,"setupFilesAfterEnv"),n.C$Y(),n.OEk(40," property to your "),n.I0R(41,"code"),n.OEk(42,"jest.config.js"),n.C$Y(),n.OEk(43," or "),n.I0R(44,"code"),n.OEk(45,"package.json"),n.C$Y(),n.OEk(46," jest configuration (depending on where your configuration is) with the path to "),n.I0R(47,"code"),n.OEk(48,"setup-jest.js"),n.C$Y(),n.OEk(49," if you have not already. "),n.wR5(50,"tui-doc-code",3),n.OEk(51," or "),n.wR5(52,"tui-doc-code",4),n.C$Y(),n.I0R(53,"li",2),n.OEk(54," Create the file "),n.I0R(55,"code"),n.OEk(56,"setup-jest.js"),n.C$Y(),n.OEk(57," (wherever you want as long as it's at the path referenced above) if you have not already. For example here at the root of the project. "),n.C$Y(),n.I0R(58,"li",2),n.OEk(59," Add the following line to the "),n.I0R(60,"code"),n.OEk(61,"setup-jest.js"),n.C$Y(),n.OEk(62," : "),n.I0R(63,"code"),n.OEk(64,"import '@ng-web-apis/universal/mocks';"),n.C$Y(),n.OEk(65," . "),n.wR5(66,"tui-doc-code",5),n.C$Y()()()),2&e&&(n.yG2(50),n.E7m("code",o.jestConfigJs),n.yG2(2),n.E7m("code",o.packageJson),n.yG2(14),n.E7m("code",o.setupJestJs))},dependencies:[s._2,i.E,s.Q5,a.u],encapsulation:2,changeDetection:0}),o})()}}]);