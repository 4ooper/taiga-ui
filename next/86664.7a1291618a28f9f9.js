(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[86664],{86664:n=>{n.exports="import {Component, DestroyRef, inject} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {\n    TuiButton,\n    tuiDialog,\n    TuiHint,\n    TuiIcon,\n    TuiIconPipe,\n    TuiTextfield,\n} from '@taiga-ui/core';\nimport {TuiInputNumber, TuiTooltip} from '@taiga-ui/kit';\n\nimport {PayModal} from './pay-modal/pay-modal.component';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example9\",\n    imports: [\n        ReactiveFormsModule,\n        TuiButton,\n        TuiHint,\n        TuiIcon,\n        TuiIconPipe,\n        TuiInputNumber,\n        TuiTextfield,\n        TuiTooltip,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly payModal = tuiDialog(PayModal, {\n        size: 'auto',\n        closeable: true,\n    });\n\n    protected readonly amountControl = new FormControl(100, {\n        nonNullable: true,\n    });\n\n    protected payByCard(): void {\n        this.payModal({\n            amount: this.amountControl.value,\n        })\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe();\n    }\n}\n"}}]);