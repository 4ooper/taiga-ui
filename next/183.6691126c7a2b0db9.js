(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[183],{183:n=>{n.exports="import {Component, inject} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiResponsiveDialogService} from '@taiga-ui/addon-mobile';\nimport {TuiAutoFocus} from '@taiga-ui/cdk';\nimport {TuiButton, TuiDialogService, TuiTextfield} from '@taiga-ui/core';\nimport {TuiConfirmService} from '@taiga-ui/kit';\nimport {TuiForm} from '@taiga-ui/layout';\nimport {type PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\n@Component({\n    imports: [FormsModule, TuiButton, TuiForm, TuiTextfield, TuiAutoFocus],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n    providers: [\n        // Provide TUI_CONFIRM_DIALOG if you want to override default Confirm dialog\n        TuiConfirmService,\n        {\n            provide: TuiDialogService,\n            useExisting: TuiResponsiveDialogService,\n        },\n    ],\n})\nexport default class Example {\n    private readonly confirm = inject(TuiConfirmService);\n    private readonly dialogs = inject(TuiDialogService);\n\n    protected value = '';\n\n    protected onModelChange(value: string): void {\n        this.value = value;\n        this.confirm.markAsDirty();\n    }\n\n    protected onClick(content: PolymorpheusContent): void {\n        const closable = this.confirm.withConfirm({\n            label: 'Are you sure?',\n            data: {content: 'Your data will be <strong>lost</strong>'},\n        });\n\n        this.dialogs\n            .open(content, {label: 'Application form', closable, dismissible: closable})\n            .subscribe({\n                complete: () => {\n                    this.value = '';\n                    this.confirm.markAsPristine();\n                },\n            });\n    }\n}\n"}}]);