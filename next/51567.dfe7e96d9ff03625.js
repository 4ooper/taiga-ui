(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[51567],{51567:(n,e,o)=>{o.r(e),o.d(e,{default:()=>m});var r=o(81359),t=o(87742),i=o(3948),l=o(7287),a=o(87560),s=o(14027),d=o(37550),c=o(4739),u=o(99514);const f=()=>[],h=n=>n.value?.every(Boolean)?null:{incompleteDateTime:!0};let m=(()=>{var n;class e{constructor(){this.control=new t.MJ([new i.JKS(2017,2,15),null],h),this.controlWithUnfinishedValidator=new t.MJ([new i.JKS(2017,2,15),null])}}return(n=e).ɵfac=function(e){return new(e||n)},n.ɵcmp=d.VBU({type:n,selectors:[["ng-component"]],decls:27,vars:22,consts:[[3,"formControl"],[3,"error","formControl"],["tuiUnfinishedValidator","Finish filling the field",3,"formControl"]],template:function(n,e){1&n&&(d.j41(0,"tui-input-date-time",0),d.EFF(1,"Choose date and time"),d.k0s(),d.nrm(2,"tui-error",1),d.nI1(3,"tuiFieldError"),d.nI1(4,"async"),d.j41(5,"p"),d.EFF(6,"Form value:"),d.k0s(),d.j41(7,"pre")(8,"code"),d.EFF(9),d.nI1(10,"json"),d.k0s()(),d.j41(11,"p"),d.EFF(12," If a field is optional, but unfinished field should be marked as invalid, use "),d.j41(13,"code"),d.EFF(14,"tuiUnfinishedValidator"),d.k0s(),d.EFF(15," directive\n"),d.k0s(),d.j41(16,"tui-input-date-time",2),d.EFF(17," Choose date and time\n"),d.k0s(),d.nrm(18,"tui-error",1),d.nI1(19,"tuiFieldError"),d.nI1(20,"async"),d.j41(21,"p"),d.EFF(22,"Form value:"),d.k0s(),d.j41(23,"pre")(24,"code"),d.EFF(25),d.nI1(26,"json"),d.k0s()()),2&n&&(d.Y8G("formControl",e.control),d.R7$(2),d.Y8G("error",d.bMT(4,10,d.bMT(3,8,d.lJ4(20,f))))("formControl",e.control),d.R7$(7),d.JRh(d.bMT(10,12,e.control.value)),d.R7$(7),d.Y8G("formControl",e.controlWithUnfinishedValidator),d.R7$(2),d.Y8G("error",d.bMT(20,16,d.bMT(19,14,d.lJ4(21,f))))("formControl",e.controlWithUnfinishedValidator),d.R7$(7),d.JRh(d.bMT(26,18,e.controlWithUnfinishedValidator.value)))},dependencies:[r.Jj,r.TG,t.X1,t.BC,t.l_,l.J6n,a.bsk,s._LP,c.n,u.D,s.CHK],encapsulation:2,changeDetection:0}),e})()}}]);