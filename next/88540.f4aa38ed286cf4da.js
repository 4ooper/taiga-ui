(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[88540],{88540:(e,n,t)=>{t.r(n),t.d(n,{IconsMappingModule:()=>Y});var o=t(39163),i=t(86568),s=t(35856),a=t(82312),c=t(752),r=t(10488),d=t(33976),u=t(83376),l=t(6528),p=t(900),h=t(55412),m=t(80384),g=t(8673),k=t(13692),f=t(34496),y=t(83480),E=t(48892),C=t(24768),I=t(47976);const O={...u.tuiKitIcons,tuiIconCalendarLarge:"date_range-24px",tuiIconHelpCircle:"help-24px",tuiIconInfo:"info-16px",tuiIconClose:"clear-24px",tuiIconChevronLeftLarge:"keyboard_arrow_left-24px",tuiIconChevronRightLarge:"keyboard_arrow_right-24px"};let w=(()=>{var e;class n{constructor(){this.date=null}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.In1({type:e,selectors:[["tui-icons-mapping-example-1"]],features:[l.M5G([(0,r.tuiSvgOptionsProvider)({path:e=>`assets/icons/${O[e]}.svg#${O[e]}`})])],decls:2,vars:2,consts:[["tuiHintContent","You can use any icons you want",1,"tui-space_top-4",3,"tuiTextfieldCleaner","ngModel","ngModelChange"]],template:function(e,n){1&e&&(l.I0R(0,"tui-input-date-range",0),l.qCj("ngModelChange",(function(e){return n.date=e})),l.OEk(1," Pick date range\n"),l.C$Y()),2&e&&l.E7m("tuiTextfieldCleaner",!0)("ngModel",n.date)},dependencies:[s.ue,s._G,E.Y,C.K,I.e],encapsulation:2}),n})();var b=t(79848);let x=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.In1({type:e,selectors:[["tui-icons-mapping-example-3"]],decls:20,vars:0,consts:[["routerLink","/icons/customization","tuiLink",""],["src","tuiIconPhone"],["src","assets/icons/polygon.svg"]],template:function(e,n){1&e&&(l.OEk(0,"There are two types of SVG gradients:\n"),l.I0R(1,"code"),l.OEk(2,"linear"),l.C$Y(),l.OEk(3,"\nand\n"),l.I0R(4,"code"),l.OEk(5,"radial"),l.C$Y(),l.OEk(6,"\n. They are defined separately from where they are used, which promotes reusability. But you should remember that such\nsvg files can't be reusable with tui-svg inside\n"),l.I0R(7,"code"),l.OEk(8,"use"),l.C$Y(),l.OEk(9,"\ntag. For workaround you need to provide (or\n"),l.I0R(10,"a",0),l.OEk(11," override\n"),l.C$Y(),l.OEk(12,"\n) src full path to svg file. "),l.wR5(13,"br")(14,"br"),l.OEk(15," non gradient icon:\n"),l.wR5(16,"tui-svg",1)(17,"br"),l.OEk(18,"\ngradient icon:\n"),l.wR5(19,"tui-svg",2))},dependencies:[h.C,b.W,a.ER],encapsulation:2}),n})();function v(e,n){if(1&e&&(l.I0R(0,"tui-doc-copy",14)(1,"code"),l.OEk(2),l.C$Y()()),2&e){const e=n.$implicit;l.E7m("cdkCopyToClipboard",e),l.yG2(2),l.cNF(e)}}let R=(()=>{var e;class n{constructor(){this.options=t.e(74904).then(t.t.bind(t,74904,17)),this.example1={HTML:t.e(15180).then(t.t.bind(t,15180,17)),TypeScript:t.e(15596).then(t.t.bind(t,15596,17)),"./assets/icons/keyboard_arrow_right-24px.svg":t.e(59528).then(t.t.bind(t,59528,17))},this.example2={"process-icons.js":t.e(18508).then(t.t.bind(t,18508,17)),"process-icons.ts":t.e(6700).then(t.t.bind(t,6700,17))},this.example3={HTML:t.e(35884).then(t.t.bind(t,35884,17)),TypeScript:t.e(1628).then(t.t.bind(t,1628,17)),"./assets/icons/polygon.svg":t.e(34176).then(t.t.bind(t,34176,17))},this.names=Object.keys(u.tuiKitIcons),this.expanded=!1}toggle(){this.expanded=!this.expanded}}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵcmp=l.In1({type:e,selectors:[["icons-mapping"]],decls:70,vars:9,consts:[["header","Icons mapping"],["routerLink","/icons/overview","tuiLink",""],["size","xs","tuiButton","","type","button",3,"click"],[3,"expanded"],[1,"wrapper"],[3,"cdkCopyToClipboard",4,"ngFor","ngForOf"],["id","material","heading","Material icons",3,"content"],["id","processing","heading","Reusable SVG",3,"content","fullsize"],["alt","info","src","assets/images/mapping.jpg","width","100%",1,"tui-space_bottom-4"],["id","gradient","heading","Gradients in SVG",3,"content","fullsize"],["id","bundled","heading","Bundled icons",3,"fullsize"],["routerLink","/icons/bundled","tuiLink",""],[1,"tui-space_top-8"],["filename","app.module.ts",3,"code"],[3,"cdkCopyToClipboard"]],template:function(e,n){1&e&&(l.I0R(0,"tui-doc-page",0)(1,"p"),l.OEk(2," Taiga UI uses "),l.I0R(3,"a",1)(4,"code"),l.OEk(5,"tui-svg"),l.C$Y()(),l.OEk(6," component to display SVG icons. It can show icons by name, link or source code. Several icon names are hardcoded into kit components. "),l.C$Y(),l.I0R(7,"p")(8,"button",2),l.qCj("click",(function(){return n.toggle()})),l.OEk(9," Show predefined names "),l.C$Y()(),l.I0R(10,"tui-expand",3)(11,"div",4),l.yuY(12,v,3,2,"tui-doc-copy",5),l.C$Y()(),l.I0R(13,"p"),l.OEk(14," These predefined names are in "),l.I0R(15,"code"),l.OEk(16,"tuiKitIcons"),l.C$Y(),l.OEk(17," (included "),l.I0R(18,"code"),l.OEk(19,"tuiCoreIcons"),l.C$Y(),l.OEk(20," ) dictionary. It is not required to provide all those icons, you can gradually add the ones you need depending on components you use. So if you want to switch to a different icon set you would need to provide own mapping, for example Material icons: "),l.C$Y(),l.I0R(21,"tui-doc-example",6),l.wR5(22,"tui-icons-mapping-example-1"),l.C$Y(),l.I0R(23,"tui-doc-example",7),l.wR5(24,"img",8)(25,"br"),l.OEk(26," By default all icons from the "),l.I0R(27,"a",1),l.OEk(28," icons pack "),l.C$Y(),l.OEk(29," are already reusable. But if you use your icons, as you can see in the previous example with the "),l.I0R(30,"code"),l.OEk(31,"keyboard_arrow_right-24px.svg"),l.C$Y(),l.OEk(32," icon, then you need to prepare svg file especially. In order to prepare such svg files, you can use our preprocessing script from "),l.I0R(33,"code"),l.OEk(34,"@taiga-ui/icons/scripts"),l.C$Y(),l.OEk(35," . In "),l.I0R(36,"code"),l.OEk(37,"tui-svg"),l.C$Y(),l.OEk(38," we use tag "),l.I0R(39,"code"),l.OEk(40,"use"),l.C$Y(),l.OEk(41," . The "),l.I0R(42,"code"),l.OEk(43,"use"),l.C$Y(),l.OEk(44," element takes nodes from within the SVG document, and duplicates them somewhere else. The effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the use element is, much like cloned template elements. This approach allows can help browser fast rendering with effectively reuse of cached svg. "),l.C$Y(),l.I0R(45,"tui-doc-example",9),l.wR5(46,"tui-icons-mapping-example-3"),l.C$Y(),l.I0R(47,"tui-doc-example",10)(48,"p"),l.OEk(49," There are two ways to add icons: "),l.I0R(50,"code"),l.OEk(51,"bundled"),l.C$Y(),l.OEk(52," and as "),l.I0R(53,"code"),l.OEk(54,"assets"),l.C$Y(),l.OEk(55," (default). Bundled icons have the benefit of immediate display but increase your app size. Assets work like regular "),l.I0R(56,"code"),l.OEk(57,'img src="xxx"'),l.C$Y(),l.OEk(58," with all the benefits of network caching. In both cases you can control color with CSS "),l.I0R(59,"code"),l.OEk(60,"color"),l.C$Y(),l.OEk(61," style. Hardcoded icons into a js bundle can be useful if your application does not have access to the network. "),l.C$Y(),l.I0R(62,"p")(63,"a",11),l.OEk(64," If you want to embed icons in a js bundle use "),l.I0R(65,"code"),l.OEk(66,"SvgService"),l.C$Y()()()(),l.I0R(67,"h2",12),l.OEk(68,"DI options"),l.C$Y(),l.wR5(69,"tui-doc-code",13),l.C$Y()),2&e&&(l.yG2(10),l.E7m("expanded",n.expanded),l.yG2(2),l.E7m("ngForOf",n.names),l.yG2(9),l.E7m("content",n.example1),l.yG2(2),l.E7m("content",n.example2)("fullsize",!0),l.yG2(22),l.E7m("content",n.example3)("fullsize",!0),l.yG2(2),l.E7m("fullsize",!0),l.yG2(22),l.E7m("code",n.options))},dependencies:[i.ay,o.q6,p.k,h.C,m.s,g.K,k.u,f.E,y.I,a.ER,w,x],styles:[".wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.sanitizer-example[_ngcontent-%COMP%]{display:block;padding-top:3.5rem}"],changeDetection:0}),n})(),Y=(()=>{var e;class n{}return(e=n).ɵfac=function(n){return new(n||e)},e.ɵmod=l.a4G({type:e}),e.ɵinj=l.s3X({imports:[i.MD,s.y,o.oz,c.Ci,r.TuiLinkModule,r.TuiExpandModule,r.TuiButtonModule,d.TuiInputDateRangeModule,r.TuiTextfieldControllerModule,c.kx,r.TuiSvgModule,a.qQ.forChild((0,c._A)(R))]}),n})()}}]);