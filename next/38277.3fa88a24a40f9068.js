(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[38277],{82387:(e,t,o)=>{o.d(t,{J:()=>l});var n=o(88692),i=o(91795),a=o(64500),u=o(75526),r=o(64537);let l=(()=>{var e;class t{}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵmod=r.oAB({type:e}),e.ɵinj=r.cJS({imports:[n.ez,i.Bz,a.Lx,u.TuiLinkModule]}),t})()},38277:(e,t,o)=>{o.r(t),o.d(t,{ExampleTuiTextfieldControllerModule:()=>k});var n=o(88692),i=o(69900),a=o(91795),u=o(64500),r=o(75526),l=o(58146),c=o(82387),s=o(64537),d=o(66596),p=o(64374),m=o(68874),f=o(10200),x=o(83074),h=o(10977),T=o(62840),y=o(60404),g=o(43560),Z=o(93525),C=o(38868),P=o(77027),V=o(41360),U=o(63060),b=o(62733),w=o(91030);let v=(()=>{var e;class t{}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.Xpm({type:e,selectors:[["tui-textfield-controller-example-1"]],decls:4,vars:1,consts:[[1,"wrapper","tui-space_top-3",3,"tuiTextfieldCleaner"],["tuiTextfieldSize","s"],["placeholder","Hello!","tuiTextfield",""]],template:function(e,t){1&e&&(s.TgZ(0,"div",0)(1,"tui-primitive-textfield",1),s._uU(2," Cool "),s._UZ(3,"input",2),s.qZA()()),2&e&&s.Q6J("tuiTextfieldCleaner",!0)},dependencies:[U.y,b.B,w.M,p.b,f.s],encapsulation:2,changeDetection:0}),t})();function _(e,t){if(1&e&&(s.TgZ(0,"p"),s._uU(1," Directive allows to customize "),s.TgZ(2,"a",3)(3,"code"),s._uU(4,"TuiPrimitiveTextfield"),s.qZA()(),s._uU(5," with parameters that it adds into DI tree. "),s.qZA(),s.TgZ(6,"p"),s._uU(7," That means that you can use the directive on any root element and it will customize all textfields in this scope. Most Taiga UI form controls are based on "),s.TgZ(8,"a",3)(9,"code"),s._uU(10,"TuiPrimitiveTextfield"),s.qZA()(),s._uU(11," and thus accept these options. "),s.qZA(),s.TgZ(12,"p"),s._uU(13," If there are several controllers above textfield, their values will be merged. The nearest directives are in priority. "),s.qZA(),s.TgZ(14,"tui-doc-example",4),s._UZ(15,"tui-textfield-controller-example-1"),s.qZA()),2&e){const e=s.oxw();s.xp6(14),s.Q6J("content",e.example1)}}function M(e,t){if(1&e&&(s.TgZ(0,"tui-input",10),s._uU(1," Hello "),s.qZA()),2&e){const e=s.oxw(2);s.Q6J("formControl",e.control)("tuiTextfieldCleaner",e.cleaner)("tuiTextfieldLabelOutside",e.labelOutside)("tuiTextfieldSize",e.size)}}function z(e,t){1&e&&s._uU(0," Shows a cross to reset a value ")}function q(e,t){1&e&&(s._uU(0," Right content (e.g. avatar with maximum size 32x32px). If it gets a string, it is inserted as "),s.TgZ(1,"code"),s._uU(2,"src"),s.qZA(),s._uU(3," or as icon name into "),s.TgZ(4,"a",11),s._uU(5," tui-svg "),s.qZA())}function A(e,t){1&e&&(s._uU(0," Label is outside a component and made with "),s.TgZ(1,"a",12)(2,"code"),s._uU(3,"Label"),s.qZA()())}function J(e,t){1&e&&s._uU(0," Size ")}function L(e,t){if(1&e){const e=s.EpF();s.TgZ(0,"tui-doc-demo",5),s.YNc(1,M,2,4,"ng-template"),s.qZA(),s.TgZ(2,"tui-doc-documentation"),s.YNc(3,z,1,0,"ng-template",6),s.NdJ("documentationPropertyValueChange",(function(t){s.CHM(e);const o=s.oxw();return s.KtG(o.cleaner=t)})),s.YNc(4,q,6,0,"ng-template",7),s.NdJ("documentationPropertyValueChange",(function(t){s.CHM(e);const o=s.oxw();return s.KtG(o.customContentSelected=t)})),s.YNc(5,A,4,0,"ng-template",8),s.NdJ("documentationPropertyValueChange",(function(t){s.CHM(e);const o=s.oxw();return s.KtG(o.labelOutside=t)})),s.YNc(6,J,1,0,"ng-template",9),s.NdJ("documentationPropertyValueChange",(function(t){s.CHM(e);const o=s.oxw();return s.KtG(o.size=t)})),s.qZA()}if(2&e){const e=s.oxw();s.Q6J("control",e.control),s.xp6(3),s.Q6J("documentationPropertyValue",e.cleaner),s.xp6(1),s.Q6J("documentationPropertyValues",e.customContentVariants)("documentationPropertyValue",e.customContentSelected),s.xp6(1),s.Q6J("documentationPropertyValue",e.labelOutside),s.xp6(1),s.Q6J("documentationPropertyValues",e.sizeVariants)("documentationPropertyValue",e.size)}}function N(e,t){if(1&e&&(s.TgZ(0,"ol",13)(1,"li")(2,"p"),s._uU(3," Import "),s.TgZ(4,"code"),s._uU(5,"TuiTextfieldControllerModule"),s.qZA(),s._uU(6," in the same module where you want to use the directive: "),s.qZA(),s._UZ(7,"tui-doc-code",14),s.qZA(),s.TgZ(8,"li")(9,"p"),s._uU(10,"Use it on Taiga UI controls or parent elements"),s.qZA(),s._UZ(11,"tui-doc-code",15),s.qZA()()),2&e){const e=s.oxw();s.xp6(7),s.Q6J("code",e.exampleModule),s.xp6(4),s.Q6J("code",e.exampleHtml)}}let S=(()=>{var e;class t{constructor(){this.exampleModule=o.e(4272).then(o.t.bind(o,4272,17)),this.exampleHtml=o.e(85875).then(o.t.bind(o,85875,17)),this.example1={TypeScript:o.e(3303).then(o.t.bind(o,3303,17)),HTML:o.e(29964).then(o.t.bind(o,29964,17))},this.sizeVariants=["s","m","l"],this.inputModeVariants=["text","numeric"],this.maxLengthVariants=[10],this.typeVariants=["text","email","password","tel","url"],this.type=this.typeVariants[0],this.customContentVariants=["","Bell"],this.customContentSelected=this.customContentVariants[0],this.cleaner=!1,this.exampleText="",this.labelOutside=!1,this.size=this.sizeVariants[2],this.inputMode=this.inputModeVariants[0],this.maxLength=null,this.control=new i.NI("111",i.kI.required)}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=s.Xpm({type:e,selectors:[["example-tui-textfield-controller"]],decls:4,vars:0,consts:[["header","TextfieldController","package","CORE","type","directives"],["pageTab",""],["pageTab","Setup"],["routerLink","/components/primitive-textfield","target","_blank","tuiLink",""],["id","base","heading","Basic",3,"content"],[3,"control"],["documentationPropertyMode","input","documentationPropertyName","tuiTextfieldCleaner","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyMode","input","documentationPropertyName","tuiTextfieldCustomContent","documentationPropertyType","PolymorpheusContent",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyMode","input","documentationPropertyName","tuiTextfieldLabelOutside","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyMode","input","documentationPropertyName","tuiTextfieldSize","documentationPropertyType","TuiSizeS | TuiSizeL",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[3,"formControl","tuiTextfieldCleaner","tuiTextfieldLabelOutside","tuiTextfieldSize"],["routerLink","/icons/overview","tuiLink",""],["routerLink","/components/label","tuiLink",""],[1,"b-demo-steps"],["filename","my.module.ts",3,"code"],["filename","my.component.html",3,"code"]],template:function(e,t){1&e&&(s.TgZ(0,"tui-doc-page",0),s.YNc(1,_,16,1,"ng-template",1),s.YNc(2,L,7,7,"ng-template",1),s.YNc(3,N,12,2,"ng-template",2),s.qZA())},dependencies:[i.JJ,i.oH,d.V,p.b,m.x,f.s,x.c,h.F,T.z,y.B,g.q,Z.n,C.f,P.K,V.w,a.rH,v],encapsulation:2,changeDetection:0}),t})(),k=(()=>{var e;class t{}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵmod=s.oAB({type:e}),e.ɵinj=s.cJS({imports:[n.ez,i.UX,r.TuiLinkModule,r.TuiPrimitiveTextfieldModule,r.TuiTextfieldControllerModule,r.TuiHintModule,u.fV,l.TuiInputModule,c.J,i.u5,a.Bz.forChild((0,u.Ve)(S))]}),t})()}}]);