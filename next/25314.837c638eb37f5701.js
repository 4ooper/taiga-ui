(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[25314],{25314:n=>{n.exports="import {AsyncPipe} from '@angular/common';\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {\n    TuiAmountPipe,\n    TuiCurrency,\n    TuiCurrencyPipeModule,\n} from '@taiga-ui/addon-commerce';\nimport {TuiDay, TuiTime} from '@taiga-ui/cdk';\nimport {\n    TuiButtonDirective,\n    TuiErrorComponent,\n    TuiGroupDirective,\n    TuiLabelDirective,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {\n    TuiBlockDirective,\n    TuiCheckboxComponent,\n    TuiDataListWrapperModule,\n    TuiFieldErrorPipeModule,\n    TuiInputDateModule,\n    TuiInputModule,\n    TuiInputNumberModule,\n    TuiInputPasswordModule,\n    TuiInputPhoneModule,\n    TuiInputSliderModule,\n    TuiInputTimeModule,\n    TuiRadioComponent,\n    TuiSelectModule,\n    TuiStepperModule,\n} from '@taiga-ui/kit';\n\nclass User {\n    constructor(\n        protected readonly firstName: string,\n        protected readonly lastName: string,\n    ) {}\n\n    protected toString(): string {\n        return `${this.firstName} ${this.lastName}`;\n    }\n}\n\nclass Account {\n    constructor(\n        protected readonly id: string,\n        protected readonly name: string,\n        protected readonly amount: number,\n        protected readonly currency: TuiCurrency,\n        protected readonly cardSvg: string,\n    ) {}\n}\n\n@Component({\n    standalone: true,\n    imports: [\n        TuiStepperModule,\n        ReactiveFormsModule,\n        TuiInputModule,\n        TuiErrorComponent,\n        TuiFieldErrorPipeModule,\n        AsyncPipe,\n        TuiInputDateModule,\n        TuiInputPasswordModule,\n        TuiInputNumberModule,\n        TuiTextfieldControllerModule,\n        TuiCurrencyPipeModule,\n        TuiInputSliderModule,\n        TuiSelectModule,\n        TuiDataListWrapperModule,\n        TuiInputPhoneModule,\n        TuiGroupDirective,\n        TuiBlockDirective,\n        TuiRadioComponent,\n        TuiInputTimeModule,\n        TuiLabelDirective,\n        TuiCheckboxComponent,\n        TuiButtonDirective,\n        TuiAmountPipe,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n})\nexport default class ExampleComponent {\n    protected readonly svgIcons = {\n        common: 'https://ng-web-apis.github.io/dist/assets/images/common.svg',\n        universal: 'https://ng-web-apis.github.io/dist/assets/images/universal.svg',\n        intersection:\n            'https://ng-web-apis.github.io/dist/assets/images/intersection-observer.svg',\n        mutation:\n            'https://ng-web-apis.github.io/dist/assets/images/mutation-observer.svg',\n    };\n\n    protected persons = [new User('Roman', 'Sedov'), new User('Alex', 'Inkin')];\n\n    protected accounts = [\n        new Account('1', 'Common', 24876.55, TuiCurrency.Ruble, this.svgIcons.common),\n        new Account('2', 'Universal', 335, TuiCurrency.Dollar, this.svgIcons.universal),\n        new Account(\n            '3',\n            'Intersection',\n            10000,\n            TuiCurrency.Euro,\n            this.svgIcons.intersection,\n        ),\n        new Account('4', 'Mutation', 100, TuiCurrency.Pound, this.svgIcons.mutation),\n    ];\n\n    protected testForm = new FormGroup({\n        nameValue: new FormControl('', Validators.required),\n        textValue: new FormControl('', Validators.required),\n        passwordValue: new FormControl('', Validators.required),\n        phoneValue: new FormControl('', Validators.required),\n        moneyValue: new FormControl('100', Validators.required),\n        periodValue: new FormControl(new TuiDay(2017, 2, 15), Validators.required),\n        timeValue: new FormControl(new TuiTime(12, 30), Validators.required),\n        personValue: new FormControl(this.persons[0]),\n        quantityValue: new FormControl(50_000, Validators.required),\n        radioValue: new FormControl('with-commission'),\n        accountWherefrom: new FormControl<Account | null>(null),\n        accountWhere: new FormControl<Account | null>(null),\n        checkboxValue: new FormControl(false),\n        osnoValue: new FormControl(true),\n        usnValue: new FormControl(false),\n        eshnValue: new FormControl(false),\n        envdValue: new FormControl(false),\n    });\n}\n"}}]);