(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[13015],{13015:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var o=n(85483),i=n(48266),c=n(35548),a=n(70288),s=n(72187),d=n(34962),p=n(61091),r=n(76970),u=n(62753);function l(e,t){1&e&&(c.TgZ(0,"p"),c._uU(1," A service that allows hiding and showing virtual keyboard programmatically on both Android and iOS devices "),c.qZA(),c.TgZ(2,"tui-notification"),c._uU(3," Does nothing on devices with no virtual keyboard or when input is not focused "),c.qZA(),c._UZ(4,"tui-doc-example",3),c.ALo(5,"tuiComponent"),c.ALo(6,"tuiExample")),2&e&&(c.xp6(4),c.Q6J("component",c.lcZ(5,2,1))("content",c.xi3(6,4,1,"html,ts")))}function m(e,t){if(1&e&&(c.TgZ(0,"ol",4)(1,"li",5),c._uU(2," Inject service and call its methods: "),c._UZ(3,"tui-doc-code",6),c.qZA()()),2&e){const e=c.oxw();c.xp6(3),c.Q6J("code",e.inject)}}const h=(()=>{var e;class t{constructor(){this.inject=n.e(99398).then(n.t.bind(n,99398,17))}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=c.Xpm({type:e,selectors:[["ng-component"]],standalone:!0,features:[c.jDz],decls:3,vars:0,consts:[["header","KeyboardService","package","ADDON-MOBILE","path","addon-mobile/services/keyboard.service.ts","type","components/services"],["pageTab",""],["pageTab","Setup"],["id","basic","heading","Basic",3,"component","content"],[1,"tui-list","tui-list_ordered"],[1,"tui-list__item"],["filename","my.component.ts",3,"code"]],template:function(e,t){1&e&&(c.TgZ(0,"tui-doc-page",0),c.YNc(1,l,7,7,"ng-template",1),c.YNc(2,m,4,1,"ng-template",2),c.qZA())},dependencies:[o.kG,a.c,s.f,d.q,p.n,r.R,u.I,i.TuiNotificationComponent],encapsulation:2,changeDetection:0}),t})()}}]);