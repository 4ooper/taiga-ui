(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[73112],{73112:n=>{n.exports='<label tuiLabel>\n    Arbitrary strings with suggestions\n    <tui-textfield multi>\n        <input\n            placeholder="Type something"\n            tuiInputChip\n            [(ngModel)]="arbitrary"\n        />\n        <tui-input-chip *tuiItem />\n        <ng-container *ngIf="items | tuiHideSelected | tuiFilterByInput as items">\n            <ng-template\n                *ngIf="items.length"\n                tuiTextfieldDropdown\n            >\n                <tui-data-list-wrapper [items]="items" />\n            </ng-template>\n        </ng-container>\n    </tui-textfield>\n</label>\n\n<label tuiLabel>\n    Only allowing items from the list and hiding values when not focused behind a custom content\n    <tui-textfield\n        #input\n        multi\n        [content]="!input.focused() && pythons.length ? \'Selected \' + pythons.length + \' out of \' + items.length : \'\'"\n        [disabledItemHandler]="handler"\n    >\n        <label tuiLabel>Select Pythons</label>\n        <input\n            tuiInputChip\n            [placeholder]="pythons.length ? \'\' : \'Type for suggestions\'"\n            [(ngModel)]="pythons"\n        />\n        <ng-template\n            *ngIf="!input.focused()"\n            tuiItem\n        />\n        <ng-container *ngIf="items | tuiHideSelected | tuiFilterByInput as items">\n            <ng-template\n                *ngIf="items.length"\n                tuiTextfieldDropdown\n            >\n                <tui-data-list-wrapper [items]="items" />\n            </ng-template>\n        </ng-container>\n    </tui-textfield>\n</label>\n\n<label tuiLabel>\n    Using checkboxes in the dropdown and making the textfield non-writable\n    <tui-textfield\n        multi\n        tuiChevron\n    >\n        <label tuiLabel>Multi Select</label>\n        <input\n            tuiInputChip\n            tuiSelectLike\n            [placeholder]="multi.length ? \'\' : \'Pick from the list\'"\n            [(ngModel)]="multi"\n        />\n        <tui-data-list-wrapper\n            *tuiTextfieldDropdown\n            new\n            tuiMultiSelectGroup\n            [items]="items"\n        />\n    </tui-textfield>\n</label>\n\n<label tuiLabel>\n    Working with objects\n    <tui-textfield\n        multi\n        tuiChevron\n        [disabledItemHandler]="strings"\n        [stringify]="stringify"\n    >\n        <input\n            tuiInputChip\n            [placeholder]="objects.length ? \'\' : \'Picking objects\'"\n            [(ngModel)]="objects"\n        />\n        <tui-input-chip *tuiItem />\n        <tui-data-list *tuiTextfieldDropdown>\n            <tui-opt-group\n                label="Pythons"\n                tuiMultiSelectGroup\n            >\n                <button\n                    *ngFor="let user of users | tuiFilterByInput"\n                    new\n                    tuiOption\n                    [value]="user"\n                >\n                    {{ user.name }}\n                </button>\n            </tui-opt-group>\n            <tui-opt-group\n                label="Collaborators"\n                tuiMultiSelectGroup\n            >\n                <button\n                    *ngFor="let user of more | tuiFilterByInput"\n                    new\n                    tuiOption\n                    [value]="user"\n                >\n                    {{ user.name }}\n                </button>\n            </tui-opt-group>\n        </tui-data-list>\n    </tui-textfield>\n</label>\n'}}]);