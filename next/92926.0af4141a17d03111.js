(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[92926],{92926:o=>{o.exports="import {Component, viewChild} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {tuiMarkControlAsTouchedAndValidate} from '@taiga-ui/cdk';\nimport {TuiButton, TuiError, TuiTextfield} from '@taiga-ui/core';\nimport {TuiCheckbox} from '@taiga-ui/kit';\nimport {TuiForm} from '@taiga-ui/layout';\nimport {type PolymorpheusContent} from '@taiga-ui/polymorpheus';\n\n@Component({\n    imports: [\n        ReactiveFormsModule,\n        TuiButton,\n        TuiCheckbox,\n        TuiError,\n        TuiForm,\n        TuiTextfield,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    protected readonly secret = viewChild<PolymorpheusContent>('secretError');\n    protected readonly company = viewChild<PolymorpheusContent>('companyError');\n    protected readonly form = new FormGroup({\n        secret: new FormControl('', [\n            ({value}) => (/^\\d{10}$/.test(value || '') ? null : {secret: this.secret}),\n            Validators.required,\n        ]),\n        company: new FormControl('', [({value}) => (value ? {inn: this.company} : null)]),\n        checkbox: new FormControl(false, [Validators.requiredTrue]),\n    });\n\n    protected onSubmit(): void {\n        tuiMarkControlAsTouchedAndValidate(this.form);\n    }\n}\n"}}]);