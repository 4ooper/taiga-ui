(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[988],{988:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var i=a(73927),n=a(26306),o=a(34073),r=a(37550),s=a(69918),c=a(15004),p=a(92229);function u(e,t){if(1&e&&(r.j41(0,"li")(1,"tui-doc-copy",3)(2,"code"),r.EFF(3),r.k0s()()()),2&e){const e=t.$implicit;r.R7$(),r.Y8G("cdkCopyToClipboard",e),r.R7$(2),r.JRh(e)}}let l=(()=>{var e;class t{constructor(){this.example1={HTML:a.e(70372).then(a.t.bind(a,70372,17)),LESS:a.e(3256).then(a.t.bind(a,3256,17)),TypeScript:a.e(57340).then(a.t.bind(a,57340,17))},this.mixins=[".appearance-hover(@ruleset)",".appearance-active(@ruleset)",".appearance-disabled(@ruleset)",".appearance-focus(@ruleset)"],this.routes=n.$}}return(e=t).ɵfac=function(t){return new(t||e)},e.ɵcmp=r.VBU({type:e,selectors:[["ng-component"]],decls:40,vars:6,consts:[["header","Appearances"],["tuiLink","",3,"routerLink"],["id","material","heading","Imitate material",3,"content"],[1,"var",3,"cdkCopyToClipboard"]],template:function(e,t){1&e&&(r.j41(0,"tui-doc-page",0)(1,"p"),r.EFF(2," Most Taiga UI components rely on "),r.j41(3,"a",1),r.EFF(4," Appearance "),r.k0s(),r.EFF(5," directive to represent their interactive state — you will find "),r.j41(6,"code"),r.EFF(7,"appearance"),r.k0s(),r.EFF(8," input on many components, such as "),r.j41(9,"a",1),r.EFF(10," Button "),r.k0s(),r.EFF(11," , "),r.j41(12,"a",1),r.EFF(13," Chip "),r.k0s(),r.EFF(14," , "),r.j41(15,"a",1),r.EFF(16," Notification "),r.k0s(),r.EFF(17," etc. "),r.k0s(),r.j41(18,"p"),r.EFF(19," When you include Taiga UI theme what you do is define light and dark mode values for CSS "),r.j41(20,"a",1),r.EFF(21," variables "),r.k0s(),r.EFF(22," and make built-in appearances, such as "),r.j41(23,"code"),r.EFF(24,"primary"),r.k0s(),r.EFF(25," or "),r.j41(26,"code"),r.EFF(27,"outline"),r.k0s(),r.EFF(28," , available to use in components. "),r.k0s(),r.j41(29,"p"),r.EFF(30," You can easily create your own appearances with the help of mixins (both LESS and SCSS) to define style rules for particular states: "),r.k0s(),r.j41(31,"ul"),r.Z7z(32,u,4,2,"li",null,r.fX1),r.k0s(),r.j41(34,"p"),r.EFF(35," Don't forget to import "),r.j41(36,"code"),r.EFF(37,"@import '@taiga-ui/core/styles/taiga-ui-local';"),r.k0s()(),r.j41(38,"tui-doc-example",2),r.nrm(39,"tui-wrapper-example-1"),r.k0s()()),2&e&&(r.R7$(3),r.Y8G("routerLink",t.routes.Appearance),r.R7$(6),r.Y8G("routerLink",t.routes.Button),r.R7$(3),r.Y8G("routerLink",t.routes.Chip),r.R7$(3),r.Y8G("routerLink",t.routes.Notification),r.R7$(5),r.Y8G("routerLink",t.routes.Variables),r.R7$(12),r.Dyx(t.mixins),r.R7$(6),r.Y8G("content",t.example1))},dependencies:[i.FQ,i.dF,s.ye,s.FS,s.e3,c.Wk,p.Jc3,o.TuiWrapperExample1],encapsulation:2,changeDetection:0}),t})()}}]);