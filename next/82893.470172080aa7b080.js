(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[82893],{82893:(e,o,t)=>{t.r(o),t.d(o,{ExampleTuiCheckboxLabeledModule:()=>I});var n=t(46556),s=t(95829),a=t(65046),l=t(20682),u=t(57760),c=t(96112),i=t(51032),r=t(39508),d=t(6094),p=t(78026),m=t(86224),b=t(7641),F=t(73803),h=t(80199),f=t(21848),k=t(35379),x=t(66399),y=t(93815),E=t(34481),v=t(4901);let V=(()=>{var e;class o{constructor(){this.testForm=new s.gE({testValue1:new s.MJ(!0),testValue2:new s.MJ(!1),testValue3:new s.MJ(!1)})}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.VBU({type:e,selectors:[["tui-checkbox-labeled-example-1"]],decls:13,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1"],[1,"example"],["formControlName","testValue2",1,"tui-space_top-3"],["formControlName","testValue3",1,"tui-space_top-3"]],template:function(e,o){1&e&&(r.j41(0,"form",0)(1,"tui-checkbox-labeled",1),r.EFF(2," Taiga UI "),r.j41(3,"div",2),r.EFF(4,"Angular UI Kit for awesome people"),r.k0s()(),r.j41(5,"tui-checkbox-labeled",3),r.EFF(6," ng-polymorpheus "),r.j41(7,"div",2),r.EFF(8,"A tiny library for polymorphic templates in Angular."),r.k0s()(),r.j41(9,"tui-checkbox-labeled",4),r.EFF(10," ng-dompurify "),r.j41(11,"div",2),r.EFF(12,"Inclusive Angular API for DOMPurify"),r.k0s()()()),2&e&&r.Y8G("formGroup",o.testForm)},dependencies:[s.qT,s.BC,s.cb,s.j4,s.JD,m.o],styles:[".example[_ngcontent-%COMP%]{color:var(--tui-text-03)}"],changeDetection:0}),o})(),g=(()=>{var e;class o{constructor(){this.testForm=new s.gE({testValue1:new s.MJ(!0),testValue2:new s.MJ(!1),testValue3:new s.MJ(!1)})}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.VBU({type:e,selectors:[["tui-checkbox-labeled-example-2"]],decls:7,vars:1,consts:[[3,"formGroup"],["formControlName","testValue1","size","l"],["formControlName","testValue2","size","l",1,"tui-space_top-5"],["formControlName","testValue3","size","l",1,"tui-space_top-5"]],template:function(e,o){1&e&&(r.j41(0,"form",0)(1,"tui-checkbox-labeled",1),r.EFF(2," An option "),r.k0s(),r.j41(3,"tui-checkbox-labeled",2),r.EFF(4," An alternative one "),r.k0s(),r.j41(5,"tui-checkbox-labeled",3),r.EFF(6," Other "),r.k0s()()),2&e&&r.Y8G("formGroup",o.testForm)},dependencies:[s.qT,s.BC,s.cb,s.j4,s.JD,m.o],encapsulation:2,changeDetection:0}),o})();function C(e,o){if(1&e&&(r.j41(0,"div",2)(1,"code"),r.EFF(2,"CheckboxLabeled"),r.k0s(),r.EFF(3," is a "),r.j41(4,"code"),r.EFF(5,"Checkbox"),r.k0s(),r.EFF(6," with a label. Click on label changes checkbox state. If you do not need a label, see "),r.j41(7,"a",3)(8,"code"),r.EFF(9,"Checkbox"),r.k0s()(),r.EFF(10," . "),r.k0s(),r.j41(11,"tui-doc-example",4),r.nrm(12,"tui-checkbox-labeled-example-1"),r.k0s(),r.j41(13,"tui-doc-example",5),r.nrm(14,"tui-checkbox-labeled-example-2"),r.k0s()),2&e){const e=r.XpG();r.R7$(11),r.Y8G("content",e.example1),r.R7$(2),r.Y8G("content",e.example2)}}function j(e,o){if(1&e&&(r.j41(0,"form",10)(1,"tui-checkbox-labeled",11),r.EFF(2," An option "),r.k0s(),r.j41(3,"tui-checkbox-labeled",12),r.EFF(4," An alternative one "),r.k0s(),r.j41(5,"tui-checkbox-labeled",13),r.EFF(6," Other "),r.k0s()()),2&e){const e=r.XpG(2);r.Y8G("formGroup",e.control),r.R7$(1),r.Y8G("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size),r.R7$(2),r.Y8G("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size),r.R7$(2),r.Y8G("focusable",e.focusable)("pseudoActive",e.pseudoPressed)("pseudoFocus",e.pseudoFocused)("pseudoHover",e.pseudoHovered)("pseudoInvalid",e.pseudoInvalid)("readOnly",e.readOnly)("size",e.size)}}function G(e,o){1&e&&(r.EFF(0," Disabled state (use "),r.j41(1,"code"),r.EFF(2,"formControl.disable()"),r.k0s(),r.EFF(3," ) "))}function w(e,o){1&e&&r.EFF(0," Size ")}function z(e,o){if(1&e){const e=r.RV6();r.j41(0,"tui-doc-demo",6),r.DNE(1,j,7,22,"ng-template"),r.k0s(),r.j41(2,"tui-doc-documentation"),r.DNE(3,G,4,0,"ng-template",7),r.bIt("documentationPropertyValueChange",(function(o){r.eBV(e);const t=r.XpG();return r.Njj(t.disabled=o)})),r.DNE(4,w,1,0,"ng-template",8),r.bIt("documentationPropertyValueChange",(function(o){r.eBV(e);const t=r.XpG();return r.Njj(t.size=o)})),r.k0s(),r.nrm(5,"inherited-documentation",9)}if(2&e){const e=r.XpG();r.Y8G("control",e.control),r.R7$(3),r.Y8G("documentationPropertyValue",e.disabled),r.R7$(1),r.Y8G("documentationPropertyValues",e.sizeVariants)("documentationPropertyValue",e.size),r.R7$(1),r.Y8G("withHint",!1)("withTextFieldController",!1)}}function P(e,o){if(1&e&&(r.j41(0,"ol",14)(1,"li")(2,"p"),r.EFF(3," Import an Angular module for forms and "),r.j41(4,"code"),r.EFF(5,"TuiCheckboxLabeledModule"),r.k0s(),r.EFF(6," in the same module where you want to use our component: "),r.k0s(),r.nrm(7,"tui-doc-code",15),r.k0s(),r.j41(8,"li")(9,"p"),r.EFF(10," Declare a form ( "),r.j41(11,"code"),r.EFF(12,"FormGroup"),r.k0s(),r.EFF(13," ) or a control ( "),r.j41(14,"code"),r.EFF(15,"FormControl"),r.k0s(),r.EFF(16," ) in your component: "),r.k0s(),r.nrm(17,"tui-doc-code",16),r.k0s(),r.j41(18,"li")(19,"p"),r.EFF(20,"Add to the template:"),r.k0s(),r.nrm(21,"tui-doc-code",17),r.k0s()()),2&e){const e=r.XpG();r.R7$(7),r.Y8G("code",e.exampleModule),r.R7$(10),r.Y8G("code",e.exampleForm),r.R7$(4),r.Y8G("code",e.exampleHtml)}}let M=(()=>{var e;class o extends d.E{constructor(){super(),this.exampleForm=t.e(20860).then(t.t.bind(t,20860,17)),this.exampleModule=t.e(38381).then(t.t.bind(t,38381,17)),this.exampleHtml=t.e(47483).then(t.t.bind(t,47483,17)),this.example1={TypeScript:t.e(98289).then(t.t.bind(t,98289,17)),HTML:t.e(13669).then(t.t.bind(t,13669,17)),LESS:t.e(68629).then(t.t.bind(t,68629,17))},this.example2={TypeScript:t.e(40896).then(t.t.bind(t,40896,17)),HTML:t.e(15784).then(t.t.bind(t,15784,17))},this.sizeVariants=["m","l"],this.size=this.sizeVariants[0],this.control=new s.gE({testValue1:new s.MJ(!1),testValue2:new s.MJ(null),testValue3:new s.MJ(!0)}),this.control.get("testValue1").valueChanges.subscribe((e=>{e&&this.control.get("testValue1").setValue(!1)}))}}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵcmp=r.VBU({type:e,selectors:[["example-tui-checkbox-labeled"]],features:[r.Jv_([{provide:p.k,useExisting:(0,r.Rfq)((()=>e))}]),r.Vt3],decls:4,vars:0,consts:[["header","CheckboxLabeled","package","KIT","type","components"],["pageTab",""],[1,"tui-space_bottom-3"],["routerLink","/components/checkbox","tuiLink",""],["id","base","heading","Basic",3,"content"],["id","large","heading","Big size",3,"content"],[3,"control"],["documentationPropertyName","disabled","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyMode","input","documentationPropertyName","size","documentationPropertyType","TuiSizeL",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[3,"withHint","withTextFieldController"],[3,"formGroup"],["formControlName","testValue1",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],["formControlName","testValue2",1,"tui-space_top-2",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],["formControlName","testValue3",1,"tui-space_top-2",3,"focusable","pseudoActive","pseudoFocus","pseudoHover","pseudoInvalid","readOnly","size"],[1,"b-demo-steps"],["filename","my.module.ts",3,"code"],["filename","my.component.ts",3,"code"],["filename","my.component.html",3,"code"]],template:function(e,o){1&e&&(r.j41(0,"tui-doc-page",0),r.DNE(1,C,15,2,"ng-template",1),r.DNE(2,z,6,6,"ng-template",1),r.DNE(3,P,22,3,"ng-template",1),r.k0s())},dependencies:[s.qT,s.BC,s.cb,s.j4,s.JD,a.Wk,m.o,b.E,F.t,h.p,f.c,k.W,x.P,y.T,E.o,v.Q,V,g],encapsulation:2,changeDetection:0}),o})(),I=(()=>{var e;class o{}return(e=o).ɵfac=function(o){return new(o||e)},e.ɵmod=r.$C({type:e}),e.ɵinj=r.G2t({imports:[n.MD,s.YN,s.X1,a.iI,c.TuiCheckboxLabeledModule,u.TuiLinkModule,l.lK,i.b,a.iI.forChild((0,l.CC)(M))]}),o})()}}]);