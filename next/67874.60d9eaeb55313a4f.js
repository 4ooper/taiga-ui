(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[67874],{67874:e=>{e.exports="import {isPlatformServer} from '@angular/common';\nimport {Component, inject, PLATFORM_ID} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_IS_E2E, TuiPlatform} from '@taiga-ui/cdk';\nimport {TuiButton, TuiLoader} from '@taiga-ui/core';\nimport {TuiProgressCircle, TuiToast} from '@taiga-ui/kit';\nimport {BehaviorSubject, of, switchMap, take, timer} from 'rxjs';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example2\",\n    imports: [TuiButton, TuiLoader, TuiPlatform, TuiProgressCircle, TuiToast],\n    templateUrl: './index.html',\n    styleUrl: './index.less',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    protected readonly trigger$ = new BehaviorSubject(0);\n    protected readonly value = toSignal(\n        inject(TUI_IS_E2E) || isPlatformServer(inject(PLATFORM_ID))\n            ? of(30)\n            : this.trigger$.pipe(switchMap(() => timer(0, 200).pipe(take(100)))),\n        {initialValue: 0},\n    );\n}\n"}}]);