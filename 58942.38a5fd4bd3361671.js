(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[58942],{58942:e=>{e.exports="import {AsyncPipe} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiError, TuiLabel} from '@taiga-ui/core';\nimport {TuiFieldErrorPipe, tuiValidationErrorsProvider} from '@taiga-ui/kit';\nimport {TuiInputModule, TuiTextfieldControllerModule} from '@taiga-ui/legacy';\nimport {injectContext, PolymorpheusComponent} from '@taiga-ui/polymorpheus';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example7\",\n    template: 'My component with {{ context.$implicit }}',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Error {\n    protected readonly context = injectContext<{$implicit: boolean}>();\n}\n\n@Component({\n    imports: [\n        AsyncPipe,\n        ReactiveFormsModule,\n        TuiError,\n        TuiFieldErrorPipe,\n        TuiInputModule,\n        TuiLabel,\n        TuiTextfieldControllerModule,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n    providers: [\n        tuiValidationErrorsProvider({\n            required: new PolymorpheusComponent(Error),\n        }),\n    ],\n})\nexport default class Example {\n    protected readonly test = new FormControl('', [Validators.required]);\n}\n"}}]);