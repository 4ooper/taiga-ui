(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[83041],{83041:n=>{n.exports="import {isPlatformBrowser} from '@angular/common';\nimport {Component, inject, PLATFORM_ID, signal} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_VALIDATION_ERRORS, TuiError, TuiTextfield} from '@taiga-ui/core';\nimport {TuiInputNumber} from '@taiga-ui/kit';\nimport {TuiForm} from '@taiga-ui/layout';\nimport {map, timer} from 'rxjs';\n\n@Component({\n    imports: [ReactiveFormsModule, TuiError, TuiForm, TuiInputNumber, TuiTextfield],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n    providers: [\n        {\n            provide: TUI_VALIDATION_ERRORS,\n            useFactory: () => ({\n                required: 'Enter this!',\n                email: 'Enter a valid email',\n                maxlength: ({requiredLength}: {requiredLength: string}) =>\n                    `Maximum length — <b>${requiredLength}</b>`,\n                minlength: ({requiredLength}: {requiredLength: string}) =>\n                    signal(`Minimum length — <b>${requiredLength}</b>`),\n                min: isPlatformBrowser(inject(PLATFORM_ID))\n                    ? toSignal(\n                          timer(0, 2000).pipe(\n                              map((index) => (index % 2 ? 'Fix please' : 'Min number 3')),\n                          ),\n                      )\n                    : 'Min number 3',\n            }),\n        },\n    ],\n})\nexport default class Example {\n    protected readonly form = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        value: new FormControl('', [Validators.minLength(4), Validators.maxLength(4)]),\n        number: new FormControl(2, [Validators.min(3)]),\n    });\n}\n"}}]);