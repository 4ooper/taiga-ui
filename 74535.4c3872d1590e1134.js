(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[74535],{74535:n=>{n.exports="import {NgIf} from '@angular/common';\nimport {Component, inject, signal} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_IS_MOBILE} from '@taiga-ui/cdk';\nimport {TuiButton, TuiLoader, TuiTitle} from '@taiga-ui/core';\nimport {TuiDialog, TuiPdfViewerComponent} from '@taiga-ui/experimental';\nimport {TuiBlockStatus} from '@taiga-ui/layout';\n\n@Component({\n    standalone: true,\n    exportAs: \"Example3\",\n    imports: [\n        NgIf,\n        TuiBlockStatus,\n        TuiButton,\n        TuiDialog,\n        TuiLoader,\n        TuiPdfViewerComponent,\n        TuiTitle,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example {\n    private readonly sanitizer = inject(DomSanitizer);\n    protected readonly isMobile = inject(TUI_IS_MOBILE);\n    protected readonly pdf = 'assets/media/taiga.pdf';\n    protected open = false;\n\n    protected readonly url = this.sanitizer.bypassSecurityTrustResourceUrl(\n        'https://app.embedpdf.com/',\n    );\n\n    protected readonly loading = signal(true);\n    protected readonly error = signal(false);\n\n    protected openPdf(): void {\n        this.open = true;\n        this.load();\n    }\n\n    protected load(): void {\n        this.loading.set(true);\n\n        setTimeout(() => {\n            this.loading.set(false);\n            this.error.set(Math.random() <= 0.5);\n        }, 1000);\n    }\n}\n"}}]);