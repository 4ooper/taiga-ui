(self.webpackChunk_taiga_ui_components=self.webpackChunk_taiga_ui_components||[]).push([[93134],{93134:e=>{e.exports="import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TuiDay, TuiDayRange} from '@taiga-ui/cdk';\nimport {TuiDayRangePeriod} from '@taiga-ui/kit';\n\nconst today = TuiDay.currentLocal();\nconst startOfWeek = today.append({day: -today.dayOfWeek()});\nconst startOfMonth = today.append({day: 1 - today.day});\nconst startOfQuarter = startOfMonth.append({month: -(startOfMonth.month % 3)});\n\n@Component({\n    selector: 'tui-calendar-range-example-5',\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport class TuiCalendarRangeExample5 {\n    readonly items = [\n        new TuiDayRangePeriod(\n            new TuiDayRange(today.append({day: -30}), today),\n            'Default',\n        ),\n        new TuiDayRangePeriod(new TuiDayRange(startOfWeek, today), 'Week'),\n        new TuiDayRangePeriod(new TuiDayRange(startOfMonth, today), 'Month'),\n        new TuiDayRangePeriod(new TuiDayRange(startOfQuarter, today), 'Quarter'),\n    ];\n\n    selected: TuiDayRangePeriod | null = this.default;\n    value: TuiDayRange | null = this.default.range;\n\n    get default(): TuiDayRangePeriod {\n        return this.items[0];\n    }\n\n    get isDefault(): boolean {\n        return this.selected === this.default;\n    }\n\n    get isSelected(): boolean {\n        return !!this.items.find(item => item === this.selected);\n    }\n\n    get isLastVisible(): boolean {\n        return this.selected === this.items[this.items.length - 1];\n    }\n\n    get opposite(): TuiDayRangePeriod | null {\n        if (!this.isSelected) {\n            return null;\n        }\n\n        switch (this.selected) {\n            case this.default:\n                return null;\n            case this.items[1]:\n                return this.items[2];\n            case this.items[2]:\n                return this.items[3];\n            case this.items[3]:\n                return null;\n            default:\n                return null;\n        }\n    }\n\n    onValue(value: TuiDayRange | null): void {\n        this.value = value;\n    }\n\n    reset(): void {\n        this.selected = this.default;\n        this.value = this.selected.range;\n    }\n\n    toggle(): void {\n        this.selected = this.opposite;\n        this.value = this.selected?.range ?? null;\n    }\n}\n"}}]);