(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[55141],{55141:n=>{n.exports='<button\n    appearance="primary"\n    tuiButton\n    type="button"\n>\n    Primary\n</button>\n\n<button\n    appearance="accent"\n    tuiButton\n    type="button"\n>\n    Accent\n</button>\n\n<button\n    appearance="secondary"\n    tuiButton\n    type="button"\n>\n    Secondary\n</button>\n\n<button\n    appearance="flat"\n    tuiButton\n    type="button"\n>\n    Flat\n</button>\n\n<button\n    appearance="outline"\n    tuiButton\n    type="button"\n>\n    Outline\n</button>\n\n<button\n    appearance="floating"\n    tuiButton\n    type="button"\n>\n    Floating\n</button>\n\n<button\n    appearance="primary"\n    disabled\n    tuiButton\n    type="button"\n>\n    Primary disabled\n</button>\n\n<div>\n    See\n    <a\n        tuiLink\n        [routerLink]="routes.Appearance"\n    >\n        Appearance\n    </a>\n    directive for more.\n</div>\n\n<div>\n    Use\n    <code>tuiAppearanceMode</code>\n    to emulate\n    <code>:checked</code>\n    /\n    <code>:invalid</code>\n    CSS state for outline appearance:\n</div>\n\n<button\n    appearance="outline"\n    tuiAppearanceMode="checked"\n    tuiButton\n    type="button"\n>\n    Outline\n</button>\n\n<button\n    appearance="outline-grayscale"\n    tuiAppearanceMode="checked invalid"\n    tuiButton\n    type="button"\n>\n    Whiteblock\n</button>\n'}}]);