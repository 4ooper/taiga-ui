(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[91703],{91703:e=>{e.exports="import {AsyncPipe} from '@angular/common';\nimport type {AfterViewInit} from '@angular/core';\nimport {Component} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {tuiMarkControlAsTouchedAndValidate} from '@taiga-ui/cdk';\nimport {TuiError, TuiHint, TuiLabel} from '@taiga-ui/core';\nimport {TuiFieldErrorPipe, tuiValidationErrorsProvider} from '@taiga-ui/kit';\nimport {TuiTextareaModule, TuiTextfieldControllerModule} from '@taiga-ui/legacy';\n\nconst LONG_TEXT_EXAMPLE = `\nIn Java: everything is an object.\nIn Clojure: everything is a list.\nIn JavaScript: everything is a terrible mistake.\n`;\n\nexport function maxLengthMessageFactory(context: {requiredLength: string}): string {\n    return `Maximum length â€” ${context.requiredLength}`;\n}\n\n@Component({\n    standalone: true,\n    exportAs: \"Example4\",\n    imports: [\n        AsyncPipe,\n        ReactiveFormsModule,\n        TuiError,\n        TuiFieldErrorPipe,\n        TuiHint,\n        TuiLabel,\n        TuiTextareaModule,\n        TuiTextfieldControllerModule,\n    ],\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    encapsulation,\n    changeDetection,\n    providers: [\n        tuiValidationErrorsProvider({\n            required: 'Enter this!',\n            maxlength: maxLengthMessageFactory,\n        }),\n    ],\n})\nexport default class Example implements AfterViewInit {\n    protected readonly maxLength = 97;\n\n    protected readonly testForm = new FormGroup({\n        testValue1: new FormControl(LONG_TEXT_EXAMPLE.trim(), [\n            Validators.required,\n            Validators.maxLength(this.maxLength),\n        ]),\n    });\n\n    public ngAfterViewInit(): void {\n        tuiMarkControlAsTouchedAndValidate(this.testForm);\n    }\n}\n"}}]);