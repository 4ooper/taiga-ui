(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[8495],{8495:n=>{n.exports="import {Component, inject} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {type TuiStringMatcher} from '@taiga-ui/cdk';\nimport {TuiTextfield} from '@taiga-ui/core';\nimport {\n    TuiChevron,\n    TuiComboBox,\n    TuiDataListWrapper,\n    TuiFilterByInputPipe,\n    TuiStringifyContentPipe,\n} from '@taiga-ui/kit';\n\ninterface User {\n    readonly id: number;\n    readonly name: string;\n}\n\n@Component({\n    imports: [\n        ReactiveFormsModule,\n        TuiChevron,\n        TuiComboBox,\n        TuiDataListWrapper,\n        TuiFilterByInputPipe,\n        TuiStringifyContentPipe,\n        TuiTextfield,\n    ],\n    templateUrl: './index.html',\n    encapsulation,\n    changeDetection,\n})\nexport default class Example<T extends User = User> {\n    protected readonly items = inject<readonly string[]>('Pythons' as any);\n\n    protected readonly users = [\n        {id: 1, name: 'John Cleese'},\n        {id: 2, name: 'Eric Idle'},\n        {id: 3, name: 'Graham Chapman'},\n        {id: 4, name: 'Michael Palin'},\n        {id: 5, name: 'Terry Gilliam'},\n    ] as unknown as readonly T[];\n\n    protected readonly form = new FormGroup({\n        user: new FormControl<T | null>(null),\n        user2: new FormControl<T | null>(null),\n    });\n\n    protected readonly stringify = ({name}: T): string => name;\n\n    protected readonly matcherString = (name: string, search: string): boolean =>\n        name.split(' ').pop()?.toLowerCase().startsWith(search.toLowerCase()) ?? false;\n\n    protected readonly matcherUser: TuiStringMatcher<T> = (user, search): boolean =>\n        user.name.toLowerCase().startsWith(search.toLowerCase());\n}\n"}}]);